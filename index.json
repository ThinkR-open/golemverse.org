[{"authors":["colin"],"categories":null,"content":"When Colin doesn’t code in R, he codes in R. Eventually, we’ll find him on Twitter… talking about R. What he prefers is to put his hands in the bowels of his favorite language to extract the buried treasures. Dismantle, divert, assemble, improve… give him a technical challenge and he will not give up until he has settled his score, preferably with elegance, a smile and without (too) fuss. And it is with pleasure that he will share the solution within the team or with the worldwide internets.\n","date":1678838400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1678834800,"objectID":"70aa9d9b5065760ce681cbe9835e522c","permalink":"/authors/colin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/colin/","section":"authors","summary":"When Colin doesn’t code in R, he codes in R. Eventually, we’ll find him on Twitter… talking about R. What he prefers is to put his hands in the bowels of his favorite language to extract the buried treasures. Dismantle, divert, assemble, improve… give him a technical challenge and he will not give up until he has settled his score, preferably with elegance, a smile and without (too) fuss. And it is with pleasure that he will share the solution within the team or with the worldwide internets.","tags":null,"title":"Colin Fay","type":"authors"},{"authors":["sebastien"],"categories":null,"content":"With a PhD thesis in marine ecology and experience in building data science tools for research, Sébastien now puts his scientific rigour at the service of our clients. With R of course! Meticulous, rigorous and patient, his battles stand around readability, reproducibility and documentation of tools. This aspiration for precision is not incompatible with great creativity, especially when it comes to diverting statistical methods and other tools from their original uses to achieve his goals. His purpose is to expose the mechanisms that link the data together and to extract the substantial bone marrow. A big consumer of spatial data, he likes to draw maps (or waffles) with R.\n","date":1575936000,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1575993653,"objectID":"5cae09a03830cbcbab20dd95e91b02cf","permalink":"/authors/sebastien/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/sebastien/","section":"authors","summary":"With a PhD thesis in marine ecology and experience in building data science tools for research, Sébastien now puts his scientific rigour at the service of our clients. With R of course! Meticulous, rigorous and patient, his battles stand around readability, reproducibility and documentation of tools. This aspiration for precision is not incompatible with great creativity, especially when it comes to diverting statistical methods and other tools from their original uses to achieve his goals.","tags":null,"title":"Sébastien Rochette","type":"authors"},{"authors":["cervan"],"categories":null,"content":"Cervan is enthusiastic and motivated when it comes to rolling up his sleeves to meet new challenges. Even if it means venturing dangerously into the depths of R, learning new languages and experimenting outside your comfort zone. Nevertheless, it remains reliable, constructive and efficient when it comes to using its skills to train or develop.\n","date":1575158400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1575194409,"objectID":"a6437c7461b210419a497187af236a9c","permalink":"/authors/cervan/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/cervan/","section":"authors","summary":"Cervan is enthusiastic and motivated when it comes to rolling up his sleeves to meet new challenges. Even if it means venturing dangerously into the depths of R, learning new languages and experimenting outside your comfort zone. Nevertheless, it remains reliable, constructive and efficient when it comes to using its skills to train or develop.","tags":null,"title":"Cervan Girard","type":"authors"},{"authors":["admin"],"categories":null,"content":"ThinkR is above all a team united by a common passion: R. Passionate about data, believing strongly in the power of open source, our team is committed every day to, and with, the user community. Coming from different backgrounds, our expeRts know how to bring a new and unique perspective on R, and hope to participate, on their own scale, in the construction of the future of the most popular language in the world of data science.\nWhether you call on us for your development, training or analysis, we are here to provide you with a unique service: the one driven by a passion for a language in constant evolution, which we like to learn, relearn, but above all to make you learn and share.\nDo you have challenges that seem insurmountable to you? That’s good, we like impossible missions. Push technology to its limits, twist language to meet a need, search manuals to the last page, that’s what makes us thrilled. It is by seeking every day to push R’s capabilities even further that we have learned to build unexpected but always high-end solutions for those who have worked with us.\nOur relationship with R is a bit like a love story: we know its every nook and cranny, we can recite its strengths and weaknesses to you without blinking, we have learned over time to love its peculiarities, its specificities, and everything that makes it unique. But above all, after so many years, it is a language that continues to amaze us: of itself, but also thanks to all the incredible resources that a global community of enthusiasts is building, and that we take real pleasure in discovering every day, to transmit them to you tomorrow.\nSo, and it goes without saying, you won’t have to look any further to find the best: they’re at ThinkR.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"ThinkR is above all a team united by a common passion: R. Passionate about data, believing strongly in the power of open source, our team is committed every day to, and with, the user community. Coming from different backgrounds, our expeRts know how to bring a new and unique perspective on R, and hope to participate, on their own scale, in the construction of the future of the most popular language in the world of data science.","tags":null,"title":"ThinkR","type":"authors"},{"authors":["diane"],"categories":null,"content":"Certified Data Scientist, it is her appetite for data and what we discover when we crush them that brought her to R. She wrote her first line of R in 2007. Pragmatic when it comes to implementing a product derived from the data, pedagogical when it comes to transmitting what she knows about R, committed when it comes to getting involved for her teams, her customers or the community of R users. She is the one who brings the values of caring and excellence to the team.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"68c9293c192927b6a1c7191d97a8c02b","permalink":"/authors/diane/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/diane/","section":"authors","summary":"Certified Data Scientist, it is her appetite for data and what we discover when we crush them that brought her to R. She wrote her first line of R in 2007. Pragmatic when it comes to implementing a product derived from the data, pedagogical when it comes to transmitting what she knows about R, committed when it comes to getting involved for her teams, her customers or the community of R users.","tags":null,"title":"Diane Beldame","type":"authors"},{"authors":["vincent"],"categories":null,"content":"With more than 10 years of experience, and with a scientific and technical background, Vincent is an R-enthusiast. He still has his hands in the code, whether to develop applications, analyze data or build packages. When he’s not coding, he plays with Docker and manages servers. Meeting highly technical challenges is not incompatible with pedagogy: he passionately trains very diverse learner profiles at R.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"c0aeec9b6caa689b4eb1e685fa0fafed","permalink":"/authors/vincent/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/vincent/","section":"authors","summary":"With more than 10 years of experience, and with a scientific and technical background, Vincent is an R-enthusiast. He still has his hands in the code, whether to develop applications, analyze data or build packages. When he’s not coding, he plays with Docker and manages servers. Meeting highly technical challenges is not incompatible with pedagogy: he passionately trains very diverse learner profiles at R.","tags":null,"title":"Vincent Guyader","type":"authors"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"b4c7f25d5b7963758e82d0980c48943b","permalink":"/contact/contact/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact/contact/","section":"contact","summary":"","tags":null,"title":"Contact ThinkR","type":"contact"},{"authors":["Colin Fay"],"categories":["golem","release"],"content":"The new version of {golem} is available!\nYou can download it from your favorite CRAN repository, or by running the following command:\npak::pak( \u0026quot;thinkr-open/golem@v0.4.0\u0026quot; )  What's up with this new version? Lighter dependency tree About dependencies When we released the first version of {golem} on CRAN, we decided that all {golem}-based app should depend on {golem}. This was a conscious decision, and we made it because {golem} comes with a bunch of internal functions that are used at runtime.\nFor example bundle_resources() links all the external resources (CSS, JS, \u0026hellip;), is_running() detects that the current app is a {golem} app, with_golem_options() allows passing arguments to your run_app() functions (and to set a new cool option that I'll talk about below), and others. We were very aware that this choice came with a drawback: adding a dependency to every {golem}-based app.\nDependency management is a big topic in the software engineering world, and some projects tend to go for minimizing as much as possible the number of dependencies.\nThey are right (to a certain extent): adding dependencies means that you can be subject to some troubles, notably if one of the packages you're relying on gets removed from the CRAN.\nEven in a contained world where you have your own CRAN-like repository, there is always the drawback of installation time: the more dependencies you have, the longer it takes to install the package, and by extension to compile a Docker image (for example). This is why we could have been tempted to imagine a different approach for {golem}: creating files inside your project that would contain everything you need. But I think that this approach can be way less safe and practical, for reasons I'll develop below.\n You need dependencies for a {shiny} app  First, whatever happens, you'll need to rely on {shiny}, as you are building a {shiny} app. And you're likely to add a bunch of other packages along the way. So the \u0026ldquo;very small dependency tree\u0026rdquo; is a myth if you're building a web app. {shiny} itself already has 31 dependencies.\n Click to show {shiny} dependency tree packageVersion(\u0026quot;shiny\u0026quot;)  ## [1] '1.7.4'  shiny \u0026lt;- pak::pkg_deps_tree(\u0026quot;shiny\u0026quot;)  ##  ## ✔ Updated metadata database: 3.44 MB in 7 files. ## ✔ Updated metadata database: 3.44 MB in 7 files.  ##  ## ℹ Updating metadata database ## ℹ Updating metadata database  ## ✔ Updating metadata database ... done ## ✔ Updating metadata database ... done  ##  ## shiny 1.7.4 [new][bld][dl] (2.48 MB) ## ├─httpuv 1.6.9 [new][bld][cmp][dl] (1.88 MB) ## │ ├─Rcpp 1.0.10 [new][bld][cmp][dl] (2.94 MB) ## │ ├─R6 2.5.1 [new][bld][dl] (63.42 kB) ## │ ├─promises 1.2.0.1 [new][bld][cmp][dl] (3.12 MB) ## │ │ ├─R6 ## │ │ ├─Rcpp ## │ │ ├─later 1.3.0 [new][bld][cmp][dl] (63.78 kB) ## │ │ │ ├─Rcpp ## │ │ │ └─rlang 1.1.0 [new][bld][cmp][dl] (742.51 kB) ## │ │ ├─rlang ## │ │ └─magrittr 2.0.3 [new][bld][cmp][dl] (267.07 kB) ## │ └─later ## ├─mime 0.12 [new][bld][cmp][dl] (12.56 kB) ## ├─jsonlite 1.8.4 [new][bld][cmp][dl] (1.05 MB) ## ├─xtable 1.8-4 [new][bld][dl] (564.59 kB) ## ├─fontawesome 0.5.0 [new][bld][dl] (1.29 MB) ## │ ├─rlang ## │ └─htmltools 0.5.4 [new][bld][cmp][dl] (131.05 kB) ## │ ├─digest 0.6.31 [new][bld][cmp][dl] (163.50 kB) ## │ ├─base64enc 0.1-3 [new][bld][cmp][dl] (7.83 kB) ## │ ├─rlang ## │ ├─fastmap 1.1.1 [new][bld][cmp][dl] (46.41 kB) ## │ └─ellipsis 0.3.2 [new][bld][cmp][dl] (8.07 kB) ## │ └─rlang ## ├─htmltools ## ├─R6 ## ├─sourcetools 0.1.7-1 [new][bld][cmp][dl] (24.09 kB) ## ├─later ## ├─promises ## ├─crayon 1.5.2 [new][bld][dl] (40.57 kB) ## ├─rlang ## ├─fastmap ## ├─withr 2.5.0 [new][bld][dl] (102.09 kB) ## ├─commonmark 1.8.1 [new][bld][cmp][dl] (139.64 kB) ## ├─glue 1.6.2 [new][bld][cmp][dl] (106.51 kB) ## ├─bslib 0.4.2 [new][bld][dl] (4.83 MB) ## │ ├─htmltools ## │ ├─jsonlite ## │ ├─sass 0.4.5 [new][bld][cmp][dl] (3.03 MB) ## │ │ ├─fs 1.6.1 [new][bld][cmp][dl] (1.19 MB) ## │ │ ├─rlang ## │ │ ├─htmltools ## │ │ ├─R6 ## │ │ └─rappdirs 0.3.3 [new][bld][cmp][dl] (12.29 kB) ## │ ├─jquerylib 0.1.4 [new][bld][dl] (520.21 kB) ## │ │ └─htmltools ## │ ├─rlang ## │ ├─cachem 1.0.7 [new][bld][cmp][dl] (26.21 kB) ## │ │ ├─rlang ## │ │ └─fastmap ## │ ├─memoise 2.0.1 [new][bld][dl] (17.85 kB) ## │ │ ├─rlang ## │ │ └─cachem ## │ ├─base64enc ## │ └─mime ## ├─cachem ## ├─ellipsis ## └─lifecycle 1.0.3 [new][bld][dl] (106.85 kB) ## ├─cli 3.6.0 [new][bld][cmp][dl] (565.15 kB) ## ├─glue ## └─rlang ## ## Key: [new] new | [dl] download | [bld] build | [cmp] compile   Updating your code base  On a larger scale, adding scripts to your app for functions that can come from a dependency is an issue in terms of security and maintenance. For example, let's imagine that tomorrow, we discover a security breach in {shiny}, or in the way {golem} bundles the resources, or any other package.\nHow can we be sure that all your apps are updated once we've built a patch? Yep, updating the packages. The solution of adding files would mean that you would have to go inside all your applications and update the files, with all the issues that come with this process (time-consuming, the risk of forgetting to update, typos\u0026hellip;)\nDev dependencies vs runtime dependencies in {golem} That being said, it's true that previous versions of {golem} used to have too many hard dependencies, creating issues when sending the apps to production. In prod, many of {golem} dependencies were useless, and you don't need them at runtime.\nThat's because {golem} has two types of dependencies: dev dependencies (the packages you're using when developing with {golem}) and runtime dependencies (the ones used when the application runs).\nIn version 0.3.3 of {golem}, we started removing dev dependencies. The first to go was {dockerfiler}, and now with 0.4.0 we have moved all the dev dependencies to the Suggests section of the DESCRIPTION. What that means is that if you're using {golem} in a fresh R distribution, the dependency tree is way lighter, as you can see below. 65 dependencies for 0.3.5, and 37 for 0.4.0.\n Click to show {golem@v0.3.5} dependency tree v035 \u0026lt;- pak::pkg_deps_tree(\u0026quot;thinkr-open/golem@v0.3.5\u0026quot;)  ## thinkr-open/golem@v0.3.5 0.3.5 [new][bld][cmp][dl] (unknown size) ## ├─attempt 0.3.1 [new][bld][dl] (79.26 kB) ## │ └─rlang 1.1.0 [new][bld][cmp][dl] (742.51 kB) ## ├─cli 3.6.0 [new][bld][cmp][dl] (565.15 kB) ## ├─config 0.3.1 [new][bld][dl] (69.06 kB) ## │ └─yaml 2.3.7 [new][bld][cmp][dl] (94.33 kB) ## ├─crayon 1.5.2 [new][bld][dl] (40.57 kB) ## ├─desc 1.4.2 [new][bld][dl] (79.25 kB) ## │ ├─cli ## │ ├─R6 2.5.1 [new][bld][dl] (63.42 kB) ## │ └─rprojroot 2.0.3 [new][bld][dl] (59.94 kB) ## ├─fs 1.6.1 [new][bld][cmp][dl] (1.19 MB) ## ├─here 1.0.1 [new][bld][dl] (32.95 kB) ## │ └─rprojroot ## ├─htmltools 0.5.4 [new][bld][cmp][dl] (131.05 kB) ## │ ├─digest 0.6.31 [new][bld][cmp][dl] (163.50 kB) ## │ ├─base64enc 0.1-3 [new][bld][cmp][dl] (7.83 kB) ## │ ├─rlang ## │ ├─fastmap 1.1.1 [new][bld][cmp][dl] (46.41 kB) ## │ └─ellipsis 0.3.2 [new][bld][cmp][dl] (8.07 kB) ## │ └─rlang ## ├─pkgload 1.3.2 [new][bld][dl] (76.70 kB) ## │ ├─cli ## │ ├─crayon ## │ ├─desc ## │ ├─fs ## │ ├─glue 1.6.2 [new][bld][cmp][dl] (106.51 kB) ## │ ├─rlang ## │ ├─rprojroot ## │ └─withr 2.5.0 [new][bld][dl] (102.09 kB) ## ├─roxygen2 7.2.3 [new][bld][cmp][dl] (279.44 kB) ## │ ├─brew 1.0-8 [new][bld][dl] (73.56 kB) ## │ ├─cli ## │ ├─commonmark 1.8.1 [new][bld][cmp][dl] (139.64 kB) ## │ ├─desc ## │ ├─knitr 1.42 [new][bld][dl] (893.59 kB) ## │ │ ├─evaluate 0.20 [new][bld][dl] (26.66 kB) ## │ │ ├─highr 0.10 [new][bld][dl] (15.08 kB) ## │ │ │ └─xfun 0.37 [new][bld][cmp][dl] (130.06 kB) ## │ │ ├─yaml ## │ │ └─xfun ## │ ├─pkgload ## │ ├─purrr 1.0.1 [new][bld][cmp][dl] (220.63 kB) ## │ │ ├─cli ## │ │ ├─lifecycle 1.0.3 [new][bld][dl] (106.85 kB) ## │ │ │ ├─cli ## │ │ │ ├─glue ## │ │ │ └─rlang ## │ │ ├─magrittr 2.0.3 [new][bld][cmp][dl] (267.07 kB) ## │ │ ├─rlang ## │ │ └─vctrs 0.5.2 [new][bld][cmp][dl] (967.43 kB) ## │ │ ├─cli ## │ │ ├─glue ## │ │ ├─lifecycle ## │ │ └─rlang ## │ ├─R6 ## │ ├─rlang ## │ ├─stringi 1.7.12 [new][bld][cmp][dl] (7.60 MB) ## │ ├─stringr 1.5.0 [new][bld][dl] (175.70 kB) ## │ │ ├─cli ## │ │ ├─glue ## │ │ ├─lifecycle ## │ │ ├─magrittr ## │ │ ├─rlang ## │ │ ├─stringi ## │ │ └─vctrs ## │ ├─withr ## │ ├─xml2 1.3.3 [new][bld][cmp][dl] (283.96 kB) ## │ └─cpp11 0.4.3 [new][bld][dl] (304.53 kB) ## ├─rstudioapi 0.14 [new][bld][dl] (115.39 kB) ## ├─shiny 1.7.4 [new][bld][dl] (2.48 MB) ## │ ├─httpuv 1.6.9 [new][bld][cmp][dl] (1.88 MB) ## │ │ ├─Rcpp 1.0.10 [new][bld][cmp][dl] (2.94 MB) ## │ │ ├─R6 ## │ │ ├─promises 1.2.0.1 [new][bld][cmp][dl] (3.12 MB) ## │ │ │ ├─R6 ## │ │ │ ├─Rcpp ## │ │ │ ├─later 1.3.0 [new][bld][cmp][dl] (63.78 kB) ## │ │ │ │ ├─Rcpp ## │ │ │ │ └─rlang ## │ │ │ ├─rlang ## │ │ │ └─magrittr ## │ │ └─later ## │ ├─mime 0.12 [new][bld][cmp][dl] (12.56 kB) ## │ ├─jsonlite 1.8.4 [new][bld][cmp][dl] (1.05 MB) ## │ ├─xtable 1.8-4 [new][bld][dl] (564.59 kB) ## │ ├─fontawesome 0.5.0 [new][bld][dl] (1.29 MB) ## │ │ ├─rlang ## │ │ └─htmltools ## │ ├─htmltools ## │ ├─R6 ## │ ├─sourcetools 0.1.7-1 [new][bld][cmp][dl] (24.09 kB) ## │ ├─later ## │ ├─promises ## │ ├─crayon ## │ ├─rlang ## │ ├─fastmap ## │ ├─withr ## │ ├─commonmark ## │ ├─glue ## │ ├─bslib 0.4.2 [new][bld][dl] (4.83 MB) ## │ │ ├─htmltools ## │ │ ├─jsonlite ## │ │ ├─sass 0.4.5 [new][bld][cmp][dl] (3.03 MB) ## │ │ │ ├─fs ## │ │ │ ├─rlang ## │ │ │ ├─htmltools ## │ │ │ ├─R6 ## │ │ │ └─rappdirs 0.3.3 [new][bld][cmp][dl] (12.29 kB) ## │ │ ├─jquerylib 0.1.4 [new][bld][dl] (520.21 kB) ## │ │ │ └─htmltools ## │ │ ├─rlang ## │ │ ├─cachem 1.0.7 [new][bld][cmp][dl] (26.21 kB) ## │ │ │ ├─rlang ## │ │ │ └─fastmap ## │ │ ├─memoise 2.0.1 [new][bld][dl] (17.85 kB) ## │ │ │ ├─rlang ## │ │ │ └─cachem ## │ │ ├─base64enc ## │ │ └─mime ## │ ├─cachem ## │ ├─ellipsis ## │ └─lifecycle ## ├─usethis 2.1.6 [new][bld][dl] (342.35 kB) ## │ ├─cli ## │ ├─clipr 0.8.0 [new][bld][dl] (21.90 kB) ## │ ├─crayon ## │ ├─curl 5.0.0 [new][bld][cmp][dl] (682.05 kB) ## │ ├─desc ## │ ├─fs ## │ ├─gert 1.9.2 [new][bld][cmp][dl] (121.09 kB) ## │ │ ├─askpass 1.1 [new][bld][cmp][dl] (5.73 kB) ## │ │ │ └─sys 3.4.1 [new][bld][cmp][dl] (20.13 kB) ## │ │ ├─credentials 1.3.2 [new][bld][dl] (230.07 kB) ## │ │ │ ├─openssl 2.0.6 [new][bld][cmp][dl] (1.21 MB) ## │ │ │ │ └─askpass ## │ │ │ ├─sys ## │ │ │ ├─curl ## │ │ │ ├─jsonlite ## │ │ │ └─askpass ## │ │ ├─openssl ## │ │ ├─rstudioapi ## │ │ ├─sys ## │ │ └─zip 2.2.2 [new][bld][cmp][dl] (103.40 kB) ## │ ├─gh 1.4.0 [new][bld][dl] (41.21 kB) ## │ │ ├─cli ## │ │ ├─gitcreds 0.1.2 [new][bld][dl] (62.57 kB) ## │ │ ├─httr2 0.2.2 [new][bld][dl] (121.36 kB) ## │ │ │ ├─cli ## │ │ │ ├─curl ## │ │ │ ├─glue ## │ │ │ ├─magrittr ## │ │ │ ├─openssl ## │ │ │ ├─R6 ## │ │ │ ├─rappdirs ## │ │ │ ├─rlang ## │ │ │ └─withr ## │ │ ├─ini 0.3.1 [new][bld][dl] (3.49 kB) ## │ │ ├─jsonlite ## │ │ └─rlang ## │ ├─glue ## │ ├─jsonlite ## │ ├─lifecycle ## │ ├─purrr ## │ ├─rappdirs ## │ ├─rlang ## │ ├─rprojroot ## │ ├─rstudioapi ## │ ├─whisker 0.4.1 [new][bld][dl] (28.59 kB) ## │ ├─withr ## │ └─yaml ## └─yaml ## ## Key: [new] new | [dl] download | [bld] build | [cmp] compile  nrow(v035)  ## [1] 66   \u0026nbsp;  Click to show {golem@v0.4.0} dependency tree v040 \u0026lt;- pak::pkg_deps_tree(\u0026quot;thinkr-open/golem@v0.4.0\u0026quot;)  ## thinkr-open/golem@v0.4.0 0.4.0 [new][bld][cmp][dl] (unknown size) ## ├─attempt 0.3.1 [new][bld][dl] (79.26 kB) ## │ └─rlang 1.1.0 [new][bld][cmp][dl] (742.51 kB) ## ├─config 0.3.1 [new][bld][dl] (69.06 kB) ## │ └─yaml 2.3.7 [new][bld][cmp][dl] (94.33 kB) ## ├─here 1.0.1 [new][bld][dl] (32.95 kB) ## │ └─rprojroot 2.0.3 [new][bld][dl] (59.94 kB) ## ├─htmltools 0.5.4 [new][bld][cmp][dl] (131.05 kB) ## │ ├─digest 0.6.31 [new][bld][cmp][dl] (163.50 kB) ## │ ├─base64enc 0.1-3 [new][bld][cmp][dl] (7.83 kB) ## │ ├─rlang ## │ ├─fastmap 1.1.1 [new][bld][cmp][dl] (46.41 kB) ## │ └─ellipsis 0.3.2 [new][bld][cmp][dl] (8.07 kB) ## │ └─rlang ## ├─rlang ## ├─shiny 1.7.4 [new][bld][dl] (2.48 MB) ## │ ├─httpuv 1.6.9 [new][bld][cmp][dl] (1.88 MB) ## │ │ ├─Rcpp 1.0.10 [new][bld][cmp][dl] (2.94 MB) ## │ │ ├─R6 2.5.1 [new][bld][dl] (63.42 kB) ## │ │ ├─promises 1.2.0.1 [new][bld][cmp][dl] (3.12 MB) ## │ │ │ ├─R6 ## │ │ │ ├─Rcpp ## │ │ │ ├─later 1.3.0 [new][bld][cmp][dl] (63.78 kB) ## │ │ │ │ ├─Rcpp ## │ │ │ │ └─rlang ## │ │ │ ├─rlang ## │ │ │ └─magrittr 2.0.3 [new][bld][cmp][dl] (267.07 kB) ## │ │ └─later ## │ ├─mime 0.12 [new][bld][cmp][dl] (12.56 kB) ## │ ├─jsonlite 1.8.4 [new][bld][cmp][dl] (1.05 MB) ## │ ├─xtable 1.8-4 [new][bld][dl] (564.59 kB) ## │ ├─fontawesome 0.5.0 [new][bld][dl] (1.29 MB) ## │ │ ├─rlang ## │ │ └─htmltools ## │ ├─htmltools ## │ ├─R6 ## │ ├─sourcetools 0.1.7-1 [new][bld][cmp][dl] (24.09 kB) ## │ ├─later ## │ ├─promises ## │ ├─crayon 1.5.2 [new][bld][dl] (40.57 kB) ## │ ├─rlang ## │ ├─fastmap ## │ ├─withr 2.5.0 [new][bld][dl] (102.09 kB) ## │ ├─commonmark 1.8.1 [new][bld][cmp][dl] (139.64 kB) ## │ ├─glue 1.6.2 [new][bld][cmp][dl] (106.51 kB) ## │ ├─bslib 0.4.2 [new][bld][dl] (4.83 MB) ## │ │ ├─htmltools ## │ │ ├─jsonlite ## │ │ ├─sass 0.4.5 [new][bld][cmp][dl] (3.03 MB) ## │ │ │ ├─fs 1.6.1 [new][bld][cmp][dl] (1.19 MB) ## │ │ │ ├─rlang ## │ │ │ ├─htmltools ## │ │ │ ├─R6 ## │ │ │ └─rappdirs 0.3.3 [new][bld][cmp][dl] (12.29 kB) ## │ │ ├─jquerylib 0.1.4 [new][bld][dl] (520.21 kB) ## │ │ │ └─htmltools ## │ │ ├─rlang ## │ │ ├─cachem 1.0.7 [new][bld][cmp][dl] (26.21 kB) ## │ │ │ ├─rlang ## │ │ │ └─fastmap ## │ │ ├─memoise 2.0.1 [new][bld][dl] (17.85 kB) ## │ │ │ ├─rlang ## │ │ │ └─cachem ## │ │ ├─base64enc ## │ │ └─mime ## │ ├─cachem ## │ ├─ellipsis ## │ └─lifecycle 1.0.3 [new][bld][dl] (106.85 kB) ## │ ├─cli 3.6.0 [new][bld][cmp][dl] (565.15 kB) ## │ ├─glue ## │ └─rlang ## └─yaml ## ## Key: [new] new | [dl] download | [bld] build | [cmp] compile  nrow(v040)  ## [1] 37   \u0026nbsp; But that's still 35 packages, right?\nYes, but as I said before, every {shiny} app will depend on {shiny}. So how many packages does {golem} actually add to your dependency tree? In other words, how many packages does {golem} depend on that are not already a {shiny} dependency?\nsetdiff( v040$package, shiny$package )  ## [1] \u0026quot;golem\u0026quot; \u0026quot;attempt\u0026quot; \u0026quot;config\u0026quot; \u0026quot;here\u0026quot; \u0026quot;rprojroot\u0026quot; \u0026quot;yaml\u0026quot;  That's 6 additional packages. {golem} \u0026amp; {attempt} being packages from ThinkR, and {config}, {here}, {rprojroot}, {yaml} packages from Posit open source team.\nSo yes, adding a dependency adds a small risk. But now it's up to you to decide if trying to remove {golem} from your dependency tree is worth the time, compared to the time gained while developing and deploying 😅\n Note that soon, we'll work on removing {attempt} and {here} from the dependencies, but these three being\n golem::install_dev_deps() To be sure that you have all the dependencies needed when developing, {golem} now has a install_dev_deps() function. This function will check that you have everything needed to develop, and it will not be called at deployment time.\nYou'll now find this function at the top of your 01_start.R script.\nMaintenance mode One new feature I'm particularly excited about is the \u0026ldquo;Maintenance mode\u0026rdquo; option.\nThis feature was born out of a specific need: in production, I needed to make an application go \u0026ldquo;offline\u0026rdquo;, as I knew the db was about to migrate. That implied doing some weird changes in the UI for a short period of time, before putting the app back.\nThat's when the idea of a \u0026ldquo;Maintenance mode\u0026rdquo; was born, for the times when you need your application to be unavailable: database updates, API changes, etc. When this maintenance mode is turned on, your application will be paused and a specific page will be displayed to your users. And the cool thing is that it's just an environment variable away: you don't need to change anything in your app.\nThe maintenance mode will be turned on whenever the R process detects that the GOLEM_MAINTENANCE_ACTIVE environment variable is set to TRUE. It will look like this:\n Big Up to my dear colleague Arthur for developing this feature!\n To visualize the maintenance page locally, you can run the following code:\nwithr::with_envvar( c(\u0026quot;GOLEM_MAINTENANCE_ACTIVE\u0026quot; = TRUE), { golem::run_dev() } )  Note that {golem} comes with a default maintenance page, and you can replace it with your own page by passing either an html_document or a tagList to the with_golem_options function in run_app.R:\nrun_app \u0026lt;- function( onStart = NULL, options = list(), enableBookmarking = NULL, uiPattern = \u0026quot;/\u0026quot;, ... ) { with_golem_options( app = shinyApp( ui = app_ui, server = app_server, onStart = onStart, options = options, enableBookmarking = enableBookmarking, uiPattern = uiPattern ), golem_opts = list(...), maintenance_page = shiny::htmlTemplate( filename = app_sys( \u0026quot;custom_maintenance_page.html\u0026quot; ) ) ) }  Other changes Please refer to the https://github.com/ThinkR-open/golem/releases page for a list of all the news!\nThanks We want to thank all the people who have contributed to this release since the v0.3.1, either by opening PR, feature requests, or bug report.\n@agronomofiorentini, @ajmoralesa, @ALanguillaume, @Andryas, @ArthurData, @asadow, @asbates, @asiripanich, @avsolovey, @Camil88, @campbead, @Cervangirard, @ColinFay, @connorcarolan, @D3SL, @DivadNojnarg, @dmenne, @Dobrokhotov1989, @earnaud, @em-dataIntegrityEnthusiast, @erikvona, @ethantenison, @etiennebacher, @fBedecarrats, @gabrielburcea, @ggpinto, @gioneves, @guivivi, @harell, @hedjour, @henrique1008, @ilyaZar, @isaactpetersen, @ivokwee, @jamieRowen, @jl5000, @JMPivette, @Jodavid, @JohnStaples, @Jopgood, @JulianoAtto, @KittJonathan, @KoderKow, @kyleweise, @leeroyaus, @lijian007, @MargotBr, @mark-druffel, @mcsiple, @mjbroerman, @nathansquan, @ncls33, @ncullen93, @novica, @pachadotdev, @psolymos, @pythiantech, @rezasz969, @seanhardison1, @shahreyar-abeer, @statnmap, @stheil15, @svenb78, @Swechhya, @Teebusch, @teofiln, @VincentGuyader, @waiteb5, @whipson, @wurli, @yogat3ch, and @YonghuiDong.\n","date":1678838400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1678834800,"objectID":"3a50fc961976b4729968594cd35d4595","permalink":"/post/golem-0.4.0-release-on-cran/","publishdate":"2023-03-15T00:00:00Z","relpermalink":"/post/golem-0.4.0-release-on-cran/","section":"post","summary":"The new version of {golem} is now available on CRAN","tags":["golem","package"],"title":"{golem} 0.4.0 is now available","type":"post"},{"authors":["Colin Fay"],"categories":["golem","release"],"content":"The new version of {golem} is now available!\nYou can download it from your favorite CRAN repository, or by running the following command:\nremotes::install_github( \u0026quot;thinkr-open/golem@v0.3.2\u0026quot; )  What's up with this new version? In this release, we have been focusing on a closer integration of tests inside the application building process, notably via Server function testing with Shiny, adding tests to fct, utils, and the ui \u0026amp; server functions that comes with {golem}.\nStarting with this version of {golem}, the integration of tests is opt-in:\ngolem::add_module(\u0026quot;plop\u0026quot;, with_test = TRUE) golem::add_fct(\u0026quot;helpers\u0026quot;, with_test = TRUE)  Note that these will be opt-out in the next release \u0026mdash; in other words they will be TRUE by default in the future.\nWe also have squashed a bunch of issues, for example amend_config() now keeps !expr (this use to cause some errors when the project was shared across multiple computers), expect_running() now finds R.exe, some adjustments has been made to fit new version of packages (for example testthat::expect_is is no longer used, and we require the correct version of {usethis}).\nFor a full list of changes, please refer to the NEWS.md file.\nWhat's next Now that this version is stable, we can start working on the next version, which will be 0.4.0.\nOne of the thing that has been an issue with the way {golem} works is that it is used in two contexts: for dev, and for deployment.\nThe issue with that approach is that when deloying a golem-based app, you will have to install packages that are only used for dev, for exemple {usethis}, while they are not required to run the app.\nThis next version will focus on removing these packages from hard dependencies and move them to suggest, so that you can install them while developing but not when deploying, making the deployment process way easier and lighter. Note that the current version of {golem} (0.3.2) has already made a move in this direction by moving {dockerfiler} to Suggest, and making it only required when building the containers.\nFollow the Version 0.4.0  board for more!\nThanks We want to thank all the people who have contributed to this version, either by opening PR, feature requests, or bug report.\n@abidawson, @abnercasallo, @aftonsteps, @AMillanFL, @antoine-sachet, @ArthurPERE, @artpulsion, @cderv, @chintanp, @ChrisBeeley, @CorradoLanera, @csgillespie, @daattali, @DivadNojnarg, @durandsinclair, @dwhdai, @dylanrussellmd, @earnaud, @fBedecarrats, @feddelegrand7, @fizic37, @fvitalini, @gacolitti, @genobobeno, @hadley, @HanjoStudy, @henrique1008, @jacksonschan, @jacobwindsor, @jaybee84, @jcrodriguez1989, @jennahamlin, @julianstanley, @KasperThystrup, @Kastakin, @KoderKow, @kprimice, @mahelious, @MayaGans, @mcsiple, @michaelhogersnplm, @moodymudskipper, @mraess, @novica, @nvelden, @quickbendelat, @rgaube, @riccardoporreca, @RichardPilbery, @robertoromor, @seanhardison1, @ShinyFabio, @sjspielman, @Swechhya, @TimotheeTournier, @VincentAlcazer, @Welsh44, @yogat3ch, @yonicd, @zchmielewska, and @ZimmermannYves.\n","date":1646956800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1646953200,"objectID":"ec128a38fe39f1d920c3b90413079687","permalink":"/post/golem-0.3.2-release-on-cran/","publishdate":"2022-03-11T00:00:00Z","relpermalink":"/post/golem-0.3.2-release-on-cran/","section":"post","summary":"The new version of {golem} is now available on CRAN","tags":["golem","package"],"title":"{golem} 0.3.2 is now available","type":"post"},{"authors":["Colin Fay"],"categories":["stream"],"content":"2022 first stream 🤓  👨‍💻 Colin Fay, @_ColinFay   🔗 https://www.twitch.tv/thinkr_fr   ⏳ 2022-02-10 20.30 Paris Time.   See Event in Other Timezones   twitch_date \u0026lt;- lubridate::ymd_hm( \u0026quot;2022-02-10 20.30\u0026quot;, tz = \u0026quot;Europe/Paris\u0026quot; ) list( UTC = lubridate::with_tz( twitch_date, \u0026quot;UTC\u0026quot; ), UTC = lubridate::with_tz( twitch_date, \u0026quot;America/New_York\u0026quot; ), UTC = lubridate::with_tz( twitch_date, \u0026quot;America/Los_Angeles\u0026quot; ), UTC = lubridate::with_tz( twitch_date, \u0026quot;Australia/Sydney\u0026quot; ) ) $UTC [1] \u0026quot;2022-02-10 19:30:00 UTC\u0026quot; $UTC [1] \u0026quot;2022-02-10 14:30:00 EST\u0026quot; $UTC [1] \u0026quot;2022-02-10 11:30:00 PST\u0026quot; $UTC [1] \u0026quot;2022-02-11 06:30:00 AEDT\u0026quot;   ","date":1644525000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1644525000,"objectID":"311b137d3c9236c225281fd1abf6e11b","permalink":"/talk/2022-02-10-twitch/","publishdate":"2022-01-28T00:00:00Z","relpermalink":"/talk/2022-02-10-twitch/","section":"talk","summary":"Let's build a new app!","tags":["golem"],"title":"2022 first stream","type":"talk"},{"authors":["Colin Fay"],"categories":["golem","hacktoberfest"],"content":"Join us for Hacktoberfest 2021 with {golem}!\nHacktoberfest is an online event, happening all over the world, where everyone is invited to open a pull request on a repo that has issues labelled hacktoberfest. The idea of this event is to gather developers (newbies or seasoned), and make them work together on open source projects.\nFor this second year, I'm happy to invite developers from the R community to take part to Hacktoberfest with {golem}. I've started to label some issues inside the repository with the hacktoberfest label, so that you can join the party, starting tomorrow!\nEvery time you'll open an issue with this label, you'll also find two other labels: the difficulty level (novice, intermediate, advanced), and a time estimate (low, medium, high). This will help you evaluate if you can try and tackle this issue or not.\nYou'll find them all on the GitHub repository. Feel free to leave a comment on the issue you'd like to tackle, and of course to ask questions if the issue is not detailed enough.\nI'm planning on release a minor version of {golem} (0.3.1) at the end of this month, with all the new features and bug fixes that we will all have worked on during the month 🤘\nYou don't feel like working on {golem}? We have also labelled other repositories inside the ThinkR GitHub organisation with the hacktoberfest tag:\n {attachment}, a package for working with dependencies in your scripts, Rmds, and packages. {fusen}, a package to build a package from a Rmd. {shinipsum}, a lorem-ipsum generator for {shiny} elements. {fakir}, a fake data generator. Companies, Officials and NGO Using R, our collaborative list of R in the real world. And more\u0026hellip;  See you on GitHub!\n","date":1632960000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1632961787,"objectID":"34177b287bf0408e8c15bada88af001f","permalink":"/post/golem-hacktoberfest-2021/","publishdate":"2021-09-30T00:00:00Z","relpermalink":"/post/golem-hacktoberfest-2021/","section":"post","summary":"Take part to Hacktoberfest 2021 with {golem}, or with other packages from ThinkR.","tags":["golem","hacktoberfest"],"title":"Join HacktoberFest 2021 with {golem} (and more)!","type":"post"},{"authors":["Colin Fay"],"categories":["golem","release"],"content":"The new version of {golem} (0.3.1) has been available on CRAN 🎉 for about a month now. This new version includes a lot of new things, but we notably focused on working on two important new features: allowing you to extend {golem} via templates, and supporting for the latest changes in {shiny}.\nExtending {golem} One of the challenges when it comes to building apps in a production context is that you might be repeating some patterns over and over again: adding the same CSS in every app, creating specific functions, setting a license, adding internal packages as dependencies, etc.\nThe key idea with {golem} is to lower the number of repetitive tasks you have to perform during the engineering of your app. We try to achieve that by providing tools that automate these common tasks. But before version 0.3, there was no way to optimize the \u0026ldquo;business specific\u0026rdquo;, internal tasks of adding files, functions, or templating modules. This is now possible with this new release of {golem}, which introduces the concept of \u0026ldquo;golem templates\u0026rdquo;: functions that can be used for project hooks, module templates, and JavaScript and CSS file creation.\nProject Hooks About project hooks A project hook is a functions called inside create_golem().\nIt allows you to define custom behaviors when creating {golem} based apps, and can be used for:\n Adding a different front-end template in R/app_ui.R Changing configuration options in inst/golem-config.yml Copying external files in inst/app/www Removing a file from the default template etc.  This function is called just after the default project has been created, and is executed in the directory of the created package. Here is a step by step of what happens when a project is created with {golem}:\n The package name is generated The directory that will receive the package is created Default {golem} template is copied to this directory R moves to the newly created project, and runs the project_hook function R moves back to the previous directory If in RStudio, the project is open  The project_hook function takes three mandatory parameters, which are passed from create_golem:\n path: the full path of the directory package_name: the name of the package ... : further arguments that can be passed from create_golem() when called from the command line  These parameters might not be used inside your own hook, but they need to be set in the hook function skeleton for compatibility reasons.\nThe best way to extend {golem} via a project hook is by defining a project_hook function in an external package. This will allow this function to be used inside the {golem} creation RStudio project creation widget:\nProject hook example Removing the dev folder:\nno_dev \u0026lt;- function(path, package_name, ...){ fs::dir_delete(\u0026quot;dev\u0026quot;) } create_golem(\u0026quot;ici\u0026quot;, project_hook = no_dev)  Create a CSS:\nnew_css \u0026lt;- function(path, package_name, ...){ css_path \u0026lt;- fs::path_abs(\u0026quot;inst/app/www/custom.css\u0026quot;) fs::file_create(css_path) write_there \u0026lt;- function(...){ write(..., file = css_path, append = TRUE) } write_there(\u0026quot;body {\u0026quot;) write_there(\u0026quot; background-color:red;\u0026quot;) write_there(\u0026quot;}\u0026quot;) cli::cat_bullet(\u0026quot;CSS generated\u0026quot;) } create_golem(\u0026quot;ici\u0026quot;, project_hook = new_css)  Module templates About module templates Module templates are called inside add_module.\nIt allows you to extend {golem} module template functionality by creating your own content inside the module file.\nThe function is called after the file(s) creation. Here is a step by step of what happens when the add_module function is called:\n The module name is generated, and the R/ directory is created if needed The fct_ and utils_ files are created if needed The path to the module is generated If the file already exists, it opens the file If the file doesn't exist, R creates the file and the module_template function is called File is potentially open  (Note that the template function is not called if the file already exists).\nModule template functions will receive, by default, the following parameters from add_modules().\n name: the name of the module path: the path to the file in R/ export: a TRUE/FALSE set by the export param of add_module() ... further arguments  These parameters might not be used inside your own function, but they need to be set in the function skeleton, for compatibility reasons.\nModule template examples my_tmpl \u0026lt;- function(name, path, export, ...){ # Define a template that write to the # module file write(name, path) } golem::add_module(name = \u0026quot;custom\u0026quot;, module_template = my_tmpl) my_other_tmpl \u0026lt;- function(name, path, export, ...){ # Copy and paste a file from somewhere file.copy(..., path) } golem::add_module(name = \u0026quot;custom\u0026quot;, module_template = my_other_tmpl)  JS \u0026amp; CSS templates About JS \u0026amp; CSS templates JavaScript and CSS templates work the same way as the module templates, and are used during the creation of JavaScript files, JavaScript handlers and CSS files, i.e. inside add_js_file(), add_js_handler() and add_css_file().\nThe function is called after the file creation. Here is a step by step of what happens when these functions are called:\n Name is created The path is generated If the file already exists, it opens the file If the file doesn't exist, R creates it and the template function is called File is potentially open  (Note that the template function is not called if the file already exists).\nYou can then define your own function inside your {golem} based application, but chances are you will be defining them into your own package.\nFile template functions will receive, by default, the following parameters from the add_*() function.\n path: the path to the file ... further arguments  These parameters might not be used inside your own function, but they need to be set in the function skeleton, for compatibility reasons.\nJS \u0026amp; CSS templates examples my_tmpl \u0026lt;- function(path, ...){ # Define a template that only write the name of the # module in the file write_there \u0026lt;- function(...){ write(..., file = path, append = TRUE) } write_there(\u0026quot;body {\u0026quot;) write_there(\u0026quot; background-color:red;\u0026quot;) write_there(\u0026quot;}\u0026quot;) } golem::add_css_file(name = \u0026quot;custom\u0026quot;, template = my_tmpl)  Support for the latest {shiny} features New module skeleton {shiny} 1.5.0, has introduced a new skeleton when it comes to modules. {golem} now supports this new skeleton:\n\u0026gt; golem::add_module(\u0026quot;plop\u0026quot;) ✓ File created at R/mod_plop.R  #' plop UI Function #' #' @description A shiny Module. #' #' @param id,input,output,session Internal parameters for {shiny}. #' #' @noRd #' #' @importFrom shiny NS tagList mod_plop_ui \u0026lt;- function(id){ ns \u0026lt;- NS(id) tagList( ) } #' plop Server Functions #' #' @noRd mod_plop_server \u0026lt;- function(id){ moduleServer( id, function(input, output, session){ ns \u0026lt;- session$ns }) } ## To be copied in the UI # mod_plop_ui(\u0026quot;plop_ui_1\u0026quot;) ## To be copied in the server # mod_plop_server(\u0026quot;plop_ui_1\u0026quot;)  Disabling auto-load Since {shiny} 1.5.0, the R folder is automatically sourced, in alphabetical order, when the app is loaded via runApp()\u0026mdash;this used to be opt-in but is now opt-out.\nThis can cause some troubles with {golem} package structure in some (rare) cases, and only when deploying to RStudio platform via golem::add_rstudioconnect_file() and friends\u0026mdash;there is no issue with the package structure and the load whenever you load golem via the golem::run_dev() or via myapp::run_app().\nThis behavior can be opt-out via two mechanisms: options(shiny.autoload.r=FALSE), or via a file called _disable_autoload.R in the R/ folder. Reliably setting options in all projects can create some issues, so we have chosen to go for the _disable_autoload.R solution.\nThis file is now created whenever you called one of golem::add_rstudioconnect_file(), golem::add_shinyappsio_file() or golem::add_shinyserver_file(). You can also force its creation via golem::disable_autoload().\nImportant note. This will still print a warning to your console:\nWarning in loadSupport(appDir, renv = sharedEnv, globalrenv = NULL) : Loading R/ subdirectory for Shiny application, but this directory appears to contain an R package. Sourcing files in R/ may cause unexpected behavior.  This is unfortunately because, at the time of writing these lines, {shiny} doesn't remove this warning when the _disable_autoload.R file is there, so this warning will be printed to your logs. You can safely ignore it for now, as long as this behavior does not change (if it ever changes) in the {shiny} package. There is an issue open on the {shiny} repo right now, so feel free to watch the progress there!\nMisc Here are a selection of changes and new features in this new version:\n  You no longer need to source the dev/run_dev.R script and can call the golem::run_dev() function from your console.\n  add_html_template() creates an empty HTML template inside your app.\n  golem::add_js_binding and golem::add_js_output_binding create a skeleton for JavaScript bindings.\n  use_external_file, use_external_css_file, use_external_js_file, and use_external_html_template download external files from URL and add them to the www folder. They all have a use_internal_ counterpart that copies files from the local computer.\n  The sanity_check() function does a series of checks inside the current project.\n  Soft deprecation We're planning on deprecating the add_ui_server_files() function. Feel free to comment on ThinkR-open/golem/issues/445 if you'd like it to stay there.\nUpdating your old projects If you've built a project with an older version of {golem}, there should be no re-engineering to do, everything should still be compatible.\nOne change though might be in the way you deploy your app on RStudio platforms, which is related to the way {shiny} now handles the package structure. Just run golem::disable_autoload() to add the support.\nIf ever you find any other issues with the new version of {golem}, please feel free to open an issue on the repository.\nFeedback and questions We're always happy to get new ideas and question on {golem}!\nIf you have a feature idea, or find a bug, please open an issue.\nThe best places to ask question are either the GitHub \u0026ldquo;Discussions\u0026rdquo; panel, or StackOverflow, using the golem tag.\nThanks We want to thank all the people who have contributed to this version, either by opening PR, feature requests, or bug report.\n@abidawson, @abnercasallo, @aftonsteps, @AMillanFL, @antoine-sachet, @ArthurPERE, @artpulsion, @cderv, @chintanp, @ChrisBeeley, @CorradoLanera, @csgillespie, @daattali, @DivadNojnarg, @durandsinclair, @dwhdai, @dylanrussellmd, @earnaud, @fBedecarrats, @feddelegrand7, @fizic37, @fvitalini, @gacolitti, @genobobeno, @hadley, @HanjoStudy, @henrique1008, @jacksonschan, @jacobwindsor, @jaybee84, @jcrodriguez1989, @jennahamlin, @julianstanley, @KasperThystrup, @Kastakin, @KoderKow, @kprimice, @mahelious, @MayaGans, @mcsiple, @michaelhogersnplm, @moodymudskipper, @mraess, @novica, @nvelden, @quickbendelat, @rgaube, @riccardoporreca, @RichardPilbery, @robertoromor, @seanhardison1, @ShinyFabio, @sjspielman, @Swechhya, @TimotheeTournier, @VincentAlcazer, @Welsh44, @yogat3ch, @yonicd, @zchmielewska, and @ZimmermannYves.\n","date":1622160000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1622233787,"objectID":"fed3403001310601ee690233b10ad1e7","permalink":"/post/golem-0.3.1-release-on-cran/","publishdate":"2021-05-28T00:00:00Z","relpermalink":"/post/golem-0.3.1-release-on-cran/","section":"post","summary":"The new version of {golem} is now available on CRAN","tags":["golem","package"],"title":"About {golem} 0.3.1","type":"post"},{"authors":["Colin Fay"],"categories":["shinipsum","release"],"content":"I'm very happy to announce that {shinipsum} is now on CRAN!\n{shinipsum} is a package that can help you build {shiny} prototypes faster by providing a series of functions that can generate random elements to populate your UI. If you are familiar with \u0026ldquo;lorem ipsum\u0026rdquo;, the fake text generator that is used in software design as a placeholder for text, the idea is the same: generating placeholders for Shiny outputs.\n{shinipsum} can be installed from CRAN with:\ninstall.packages(\u0026quot;shinipsum\u0026quot;)  You can install this package from GitHub with:\nremotes::install_github(\u0026quot;Thinkr-open/shinipsum\u0026quot;)  In this package, a series of functions that generates random placeholders. For example, random_ggplot() generates random {ggplot2} elements:\nlibrary(shinipsum) library(ggplot2)  random_ggplot() + labs(title = \u0026quot;Random plot\u0026quot;)  ## Bin width defaults to 1/30 of the range of the data. Pick better value with ## `binwidth`.  random_ggplot() + labs(title = \u0026quot;Random plot\u0026quot;)  Of course, the idea is to combine this with a Shiny interface, for example random_ggplot() will be used with a renderPlot() and plotOutput(). And as we want to prototype but still be close to what your final application will look like, these functions take arguments that can shape the output: for example, random_ggplot() has a type parameter that can help you select a specific geom.\nlibrary(shiny) library(shinipsum) library(DT) ui \u0026lt;- fluidPage( h2(\u0026quot;A Random DT\u0026quot;), DTOutput(\u0026quot;data_table\u0026quot;), h2(\u0026quot;A Random Plot\u0026quot;), plotOutput(\u0026quot;plot\u0026quot;), h2(\u0026quot;A Random Text\u0026quot;), tableOutput(\u0026quot;text\u0026quot;) ) server \u0026lt;- function(input, output, session) { output$data_table \u0026lt;- DT::renderDT({ random_DT(5, 5) }) output$plot \u0026lt;- renderPlot({ random_ggplot(type = \u0026quot;point\u0026quot;) }) output$text \u0026lt;- renderText({ random_text(nwords = 50) }) } shinyApp(ui, server)  Other {shinipsum} functions include:\n tables:  random_table(nrow = 3, ncol = 10)  ## mpg cyl disp hp drat wt qsec vs am gear ## Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 ## Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 ## Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4   print outputs:  random_print(type = \u0026quot;model\u0026quot;)  ## ## Pearson's product-moment correlation ## ## data: datasets::mtcars$mpg and datasets::mtcars$cyl ## t = -8.9197, df = 30, p-value = 6.113e-10 ## alternative hypothesis: true correlation is not equal to 0 ## 95 percent confidence interval: ## -0.9257694 -0.7163171 ## sample estimates: ## cor ## -0.852162  \u0026hellip; and text, image, ggplotly, dygraph, and DT.\nLearn more about {shinipsum}:\n {shinipsum} website Chapter 10 Building an “ipsum-app” - Engineering Production-Grade Shiny Apps  ","date":1589068800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589142587,"objectID":"37a2afb9049372689e5e47763ff18087","permalink":"/post/2020-05-10_shinipsum-cran-realease/","publishdate":"2020-05-10T00:00:00Z","relpermalink":"/post/2020-05-10_shinipsum-cran-realease/","section":"post","summary":"{shinipsum} is now available on CRAN","tags":["shinipsum","package"],"title":"{shinipsum} is now on CRAN","type":"post"},{"authors":["Colin Fay"],"categories":["stream"],"content":"Third live stream 🤓  👨‍💻 Colin Fay, @_ColinFay   🔗 https://www.twitch.tv/thinkr_fr   ⏳ 2020-04-02 21:00 Paris Time.   See Event in Other Timezones   $UTC [1] \u0026quot;2020-04-02 19:00:00 UTC\u0026quot; $`America/New_York` [1] \u0026quot;2020-04-02 15:00:00 EDT\u0026quot; $`America/Los_Angeles` [1] \u0026quot;2020-04-02 12:00:00 PDT\u0026quot; $`Australia/Sydney` [1] \u0026quot;2020-04-03 06:00:00 AEDT\u0026quot;   ","date":1585861200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585861200,"objectID":"01bead2e8fb1d8084e6737036280d2dc","permalink":"/talk/2020-04-02-twitch/","publishdate":"2020-03-31T00:00:00Z","relpermalink":"/talk/2020-04-02-twitch/","section":"talk","summary":"Overview of {hexmake}.","tags":["golem"],"title":"Third live stream","type":"talk"},{"authors":["Colin Fay"],"categories":["stream"],"content":"Second live stream 🎂  👨‍💻 Colin Fay, @_ColinFay   🔗 https://www.twitch.tv/thinkr_fr   ⏳ __2020-01-21 21.00 Paris Time__.   See Event in Other Timezones   $UTC [1] \u0026quot;2020-01-21 20:00:00 UTC\u0026quot; $`America/New_York` [1] \u0026quot;2020-01-21 15:00:00 EST\u0026quot; $`America/Los_Angeles` [1] \u0026quot;2020-01-21 12:00:00 PST\u0026quot; $`Australia/Sydney` [1] \u0026quot;2020-01-22 07:00:00 AEDT\u0026quot;   ","date":1579813200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579813200,"objectID":"c90898aae1cff2272ef54a794af6dad9","permalink":"/talk/2020-01-23-twitch/","publishdate":"2017-01-20T00:00:00Z","relpermalink":"/talk/2020-01-23-twitch/","section":"talk","summary":"Live stream on building a {golem} app.","tags":["golem"],"title":"Second live stream","type":"talk"},{"authors":["Colin Fay"],"categories":["stream"],"content":"First live stream 🎂  👨‍💻 Colin Fay, @_ColinFay   🔗 https://www.twitch.tv/thinkr_fr   ⏳ __2020-01-13 21.00 Paris Time__.   See Event in Other Timezones   $UTC [1] \u0026quot;2020-01-13 20:00:00 UTC\u0026quot; $`America/New_York` [1] \u0026quot;2020-01-13 15:00:00 EST\u0026quot; $`America/Los_Angeles` [1] \u0026quot;2020-01-13 12:00:00 PST\u0026quot; $`Australia/Sydney` [1] \u0026quot;2020-01-14 07:00:00 AEDT\u0026quot;   ","date":1578949200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578949200,"objectID":"70ea89fa6d9a02db0a6b536c8d7b053d","permalink":"/talk/2020-01-13-twitch/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/2020-01-13-twitch/","section":"talk","summary":"Live stream on building a {golem} app.","tags":["golem"],"title":"First live stream 🎂","type":"talk"},{"authors":null,"categories":null,"content":"","date":1578614400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578614400,"objectID":"9700fbe6fb549a8466173091aa66a529","permalink":"/stream/","publishdate":"2020-01-10T00:00:00Z","relpermalink":"/stream/","section":"","summary":"{golemverse} streams","tags":null,"title":"Streams","type":"widget_page"},{"authors":["Sébastien Rochette"],"categories":["package"],"content":"The goal of {shinipsum} is to provide random shiny elements for easiest shiny app prototyping, so that you can focus on building the frontend before building the backend.\nMore documentation of shinipsum on its dedicated website\n","date":1575936000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575993653,"objectID":"cf7050c8c657082546869d130f79dc58","permalink":"/packages_list/shinipsum-package/","publishdate":"2019-12-10T00:00:00Z","relpermalink":"/packages_list/shinipsum-package/","section":"packages_list","summary":"The goal of {shinipsum} is to provide random shiny elements for easiest shiny app prototyping, so that you can focus on building the frontend before building the backend.\nMore documentation of shinipsum on its dedicated website","tags":["shinipsum"],"title":"{shinipsum}","type":"packages_list"},{"authors":[],"categories":["book"],"content":"The book is in construction here: https://engineering-shiny.org\n","date":1575849600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575909164,"objectID":"6b0775083172ca2005643d68c6b4745b","permalink":"/publication/building-big-shiny-apps-a-workflow-building-big-shiny-apps-a-workflow/","publishdate":"2019-12-09T00:00:00Z","relpermalink":"/publication/building-big-shiny-apps-a-workflow-building-big-shiny-apps-a-workflow/","section":"publication","summary":"The book is in construction here: https://engineering-shiny.org","tags":["shiny","bookdown"],"title":"Building Big Shiny Apps - A Workflow","type":"publication"},{"authors":["Sébastien Rochette"],"categories":["golem"],"content":"{golem} is an opinionated framework for building production-grade shiny applications.\nMore documentation on {golem} website here\n","date":1575849600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575903909,"objectID":"f7b5435858ab650845dc06ba3e17dc77","permalink":"/packages_list/golem/","publishdate":"2019-12-09T00:00:00Z","relpermalink":"/packages_list/golem/","section":"packages_list","summary":"{golem} is an opinionated framework for building production-grade shiny applications.\nMore documentation on {golem} website here","tags":["golem"],"title":"{golem}","type":"packages_list"},{"authors":["Cervan Girard"],"categories":["shinysnippets"],"content":"Thanks to {shinysnippets} package, you will save development time. No more need to type obverseEvent(), withProgress() or module_1_server()`/module_1_ui()` \u0026hellip;\nUse the power of Rstudio snippets !\nMore documentation on {shinysnippets}\n","date":1575158400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575194409,"objectID":"fc88477161e14a83e736aa118fc76c6b","permalink":"/packages_list/shinysnippets/","publishdate":"2019-12-01T00:00:00Z","relpermalink":"/packages_list/shinysnippets/","section":"packages_list","summary":"Thanks to {shinysnippets} package, you will save development time. No more need to type obverseEvent(), withProgress() or module_1_server()`/module_1_ui()` \u0026hellip;\nUse the power of Rstudio snippets !\nMore documentation on {shinysnippets}","tags":["shinysnippets"],"title":"{shinysnippets}","type":"packages_list"},{"authors":[],"categories":["golem","release"],"content":"golem (v0.1) A Framework for Building Robust Shiny Apps:\n {golem} on CRAN {golem} no GitHub pkgdown and vignettes  ","date":1564963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1565018470,"objectID":"dabf355f4f64872f583906ed3f5cd35d","permalink":"/post/golem-0.1.0-release-on-cran/","publishdate":"2019-08-05T00:00:00Z","relpermalink":"/post/golem-0.1.0-release-on-cran/","section":"post","summary":"First version of {golem} is on CRAN","tags":["golem","package"],"title":"{golem} 0.1.0 has been released on CRAN","type":"post"},{"authors":null,"categories":null,"content":"","date":1547942400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1547942400,"objectID":"e9d4ca93fd565845d3ef0ae83cbf88d3","permalink":"/documentation/","publishdate":"2019-01-20T00:00:00Z","relpermalink":"/documentation/","section":"","summary":"Documentation for the {golemverse}","tags":null,"title":"Documentation","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"9eb50f9088083bebcb7e4cf99e22b9ed","permalink":"/news/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/news/","section":"","summary":"Blog post in the {golemverse}","tags":null,"title":"Blog","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"df96915dedf49245642651ffff54f1db","permalink":"/packages/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/packages/","section":"","summary":"List of packages in the golemverse","tags":null,"title":"Packages","type":"widget_page"}]