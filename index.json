[{"authors":["colin"],"categories":null,"content":"When Colin doesn’t code in R, he codes in R. Eventually, we’ll find him on Twitter… talking about R. What he prefers is to put his hands in the bowels of his favorite language to extract the buried treasures. Dismantle, divert, assemble, improve… give him a technical challenge and he will not give up until he has settled his score, preferably with elegance, a smile and without (too) fuss. And it is with pleasure that he will share the solution within the team or with the worldwide internets.\n","date":1632960000,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1632961787,"objectID":"70aa9d9b5065760ce681cbe9835e522c","permalink":"/authors/colin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/colin/","section":"authors","summary":"When Colin doesn’t code in R, he codes in R. Eventually, we’ll find him on Twitter… talking about R. What he prefers is to put his hands in the bowels of his favorite language to extract the buried treasures. Dismantle, divert, assemble, improve… give him a technical challenge and he will not give up until he has settled his score, preferably with elegance, a smile and without (too) fuss. And it is with pleasure that he will share the solution within the team or with the worldwide internets.","tags":null,"title":"Colin Fay","type":"authors"},{"authors":["sebastien"],"categories":null,"content":"With a PhD thesis in marine ecology and experience in building data science tools for research, Sébastien now puts his scientific rigour at the service of our clients. With R of course! Meticulous, rigorous and patient, his battles stand around readability, reproducibility and documentation of tools. This aspiration for precision is not incompatible with great creativity, especially when it comes to diverting statistical methods and other tools from their original uses to achieve his goals. His purpose is to expose the mechanisms that link the data together and to extract the substantial bone marrow. A big consumer of spatial data, he likes to draw maps (or waffles) with R.\n","date":1575936000,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1575993653,"objectID":"5cae09a03830cbcbab20dd95e91b02cf","permalink":"/authors/sebastien/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/sebastien/","section":"authors","summary":"With a PhD thesis in marine ecology and experience in building data science tools for research, Sébastien now puts his scientific rigour at the service of our clients. With R of course! Meticulous, rigorous and patient, his battles stand around readability, reproducibility and documentation of tools. This aspiration for precision is not incompatible with great creativity, especially when it comes to diverting statistical methods and other tools from their original uses to achieve his goals.","tags":null,"title":"Sébastien Rochette","type":"authors"},{"authors":["cervan"],"categories":null,"content":"Cervan is enthusiastic and motivated when it comes to rolling up his sleeves to meet new challenges. Even if it means venturing dangerously into the depths of R, learning new languages and experimenting outside your comfort zone. Nevertheless, it remains reliable, constructive and efficient when it comes to using its skills to train or develop.\n","date":1575158400,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1575194409,"objectID":"a6437c7461b210419a497187af236a9c","permalink":"/authors/cervan/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/cervan/","section":"authors","summary":"Cervan is enthusiastic and motivated when it comes to rolling up his sleeves to meet new challenges. Even if it means venturing dangerously into the depths of R, learning new languages and experimenting outside your comfort zone. Nevertheless, it remains reliable, constructive and efficient when it comes to using its skills to train or develop.","tags":null,"title":"Cervan Girard","type":"authors"},{"authors":["admin"],"categories":null,"content":"ThinkR is above all a team united by a common passion: R. Passionate about data, believing strongly in the power of open source, our team is committed every day to, and with, the user community. Coming from different backgrounds, our expeRts know how to bring a new and unique perspective on R, and hope to participate, on their own scale, in the construction of the future of the most popular language in the world of data science.\nWhether you call on us for your development, training or analysis, we are here to provide you with a unique service: the one driven by a passion for a language in constant evolution, which we like to learn, relearn, but above all to make you learn and share.\nDo you have challenges that seem insurmountable to you? That’s good, we like impossible missions. Push technology to its limits, twist language to meet a need, search manuals to the last page, that’s what makes us thrilled. It is by seeking every day to push R’s capabilities even further that we have learned to build unexpected but always high-end solutions for those who have worked with us.\nOur relationship with R is a bit like a love story: we know its every nook and cranny, we can recite its strengths and weaknesses to you without blinking, we have learned over time to love its peculiarities, its specificities, and everything that makes it unique. But above all, after so many years, it is a language that continues to amaze us: of itself, but also thanks to all the incredible resources that a global community of enthusiasts is building, and that we take real pleasure in discovering every day, to transmit them to you tomorrow.\nSo, and it goes without saying, you won’t have to look any further to find the best: they’re at ThinkR.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"ThinkR is above all a team united by a common passion: R. Passionate about data, believing strongly in the power of open source, our team is committed every day to, and with, the user community. Coming from different backgrounds, our expeRts know how to bring a new and unique perspective on R, and hope to participate, on their own scale, in the construction of the future of the most popular language in the world of data science.","tags":null,"title":"ThinkR","type":"authors"},{"authors":["diane"],"categories":null,"content":"Certified Data Scientist, it is her appetite for data and what we discover when we crush them that brought her to R. She wrote her first line of R in 2007. Pragmatic when it comes to implementing a product derived from the data, pedagogical when it comes to transmitting what she knows about R, committed when it comes to getting involved for her teams, her customers or the community of R users. She is the one who brings the values of caring and excellence to the team.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"68c9293c192927b6a1c7191d97a8c02b","permalink":"/authors/diane/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/diane/","section":"authors","summary":"Certified Data Scientist, it is her appetite for data and what we discover when we crush them that brought her to R. She wrote her first line of R in 2007. Pragmatic when it comes to implementing a product derived from the data, pedagogical when it comes to transmitting what she knows about R, committed when it comes to getting involved for her teams, her customers or the community of R users.","tags":null,"title":"Diane Beldame","type":"authors"},{"authors":["vincent"],"categories":null,"content":"With more than 10 years of experience, and with a scientific and technical background, Vincent is an R-enthusiast. He still has his hands in the code, whether to develop applications, analyze data or build packages. When he’s not coding, he plays with Docker and manages servers. Meeting highly technical challenges is not incompatible with pedagogy: he passionately trains very diverse learner profiles at R.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"c0aeec9b6caa689b4eb1e685fa0fafed","permalink":"/authors/vincent/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/vincent/","section":"authors","summary":"With more than 10 years of experience, and with a scientific and technical background, Vincent is an R-enthusiast. He still has his hands in the code, whether to develop applications, analyze data or build packages. When he’s not coding, he plays with Docker and manages servers. Meeting highly technical challenges is not incompatible with pedagogy: he passionately trains very diverse learner profiles at R.","tags":null,"title":"Vincent Guyader","type":"authors"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"b4c7f25d5b7963758e82d0980c48943b","permalink":"/contact/contact/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact/contact/","section":"contact","summary":"","tags":null,"title":"Contact ThinkR","type":"contact"},{"authors":["Colin Fay"],"categories":["golem","hacktoberfest"],"content":"Join us for Hacktoberfest 2021 with {golem}!\nHacktoberfest is an online event, happening all over the world, where everyone is invited to open a pull request on a repo that has issues labelled hacktoberfest. The idea of this event is to gather developers (newbies or seasoned), and make them work together on open source projects.\nFor this second year, I'm happy to invite developers from the R community to take part to Hacktoberfest with {golem}. I've started to label some issues inside the repository with the hacktoberfest label, so that you can join the party, starting tomorrow!\nEvery time you'll open an issue with this label, you'll also find two other labels: the difficulty level (novice, intermediate, advanced), and a time estimate (low, medium, high). This will help you evaluate if you can try and tackle this issue or not.\nYou'll find them all on the GitHub repository. Feel free to leave a comment on the issue you'd like to tackle, and of course to ask questions if the issue is not detailled enough.\nI'm planning on release a minor version of {golem} (0.3.1) at the end of this month, with all the new features and bug fixes that we will all have worked on during the month 🤘\nSee you on GitHub!\n","date":1632960000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1632961787,"objectID":"34177b287bf0408e8c15bada88af001f","permalink":"/post/golem-hacktoberfest-2021/","publishdate":"2021-09-30T00:00:00Z","relpermalink":"/post/golem-hacktoberfest-2021/","section":"post","summary":"Take part to Hacktoberfest 2021 with {golem}","tags":["golem","hacktoberfest"],"title":"Join HacktoberFest 2021 with {golem}!","type":"post"},{"authors":["Colin Fay"],"categories":["golem","release"],"content":"The new version of {golem} (0.3.1) has been available on CRAN 🎉 for about a month now. This new version includes a lot of new things, but we notably focused on working on two important new features: allowing you to extend {golem} via templates, and supporting for the latest changes in {shiny}.\nExtending {golem} One of the challenges when it comes to building apps in a production context is that you might be repeating some patterns over and over again: adding the same CSS in every app, creating specific functions, setting a license, adding internal packages as dependencies, etc.\nThe key idea with {golem} is to lower the number of repetitive tasks you have to perform during the engineering of your app. We try to achieve that by providing tools that automate these common tasks. But before version 0.3, there was no way to optimize the \u0026ldquo;business specific\u0026rdquo;, internal tasks of adding files, functions, or templating modules. This is now possible with this new release of {golem}, which introduces the concept of \u0026ldquo;golem templates\u0026rdquo;: functions that can be used for project hooks, module templates, and JavaScript and CSS file creation.\nProject Hooks About project hooks A project hook is a functions called inside create_golem().\nIt allows you to define custom behaviors when creating {golem} based apps, and can be used for:\n Adding a different front-end template in R/app_ui.R Changing configuration options in inst/golem-config.yml Copying external files in inst/app/www Removing a file from the default template etc.  This function is called just after the default project has been created, and is executed in the directory of the created package. Here is a step by step of what happens when a project is created with {golem}:\n The package name is generated The directory that will receive the package is created Default {golem} template is copied to this directory R moves to the newly created project, and runs the project_hook function R moves back to the previous directory If in RStudio, the project is open  The project_hook function takes three mandatory parameters, which are passed from create_golem:\n path: the full path of the directory package_name: the name of the package ... : further arguments that can be passed from create_golem() when called from the command line  These parameters might not be used inside your own hook, but they need to be set in the hook function skeleton for compatibility reasons.\nThe best way to extend {golem} via a project hook is by defining a project_hook function in an external package. This will allow this function to be used inside the {golem} creation RStudio project creation widget:\nProject hook example Removing the dev folder:\nno_dev \u0026lt;- function(path, package_name, ...){ fs::dir_delete(\u0026quot;dev\u0026quot;) } create_golem(\u0026quot;ici\u0026quot;, project_hook = no_dev)  Create a CSS:\nnew_css \u0026lt;- function(path, package_name, ...){ css_path \u0026lt;- fs::path_abs(\u0026quot;inst/app/www/custom.css\u0026quot;) fs::file_create(css_path) write_there \u0026lt;- function(...){ write(..., file = css_path, append = TRUE) } write_there(\u0026quot;body {\u0026quot;) write_there(\u0026quot; background-color:red;\u0026quot;) write_there(\u0026quot;}\u0026quot;) cli::cat_bullet(\u0026quot;CSS generated\u0026quot;) } create_golem(\u0026quot;ici\u0026quot;, project_hook = new_css)  Module templates About module templates Module templates are called inside add_module.\nIt allows you to extend {golem} module template functionality by creating your own content inside the module file.\nThe function is called after the file(s) creation. Here is a step by step of what happens when the add_module function is called:\n The module name is generated, and the R/ directory is created if needed The fct_ and utils_ files are created if needed The path to the module is generated If the file already exists, it opens the file If the file doesn't exist, R creates the file and the module_template function is called File is potentially open  (Note that the template function is not called if the file already exists).\nModule template functions will receive, by default, the following parameters from add_modules().\n name: the name of the module path: the path to the file in R/ export: a TRUE/FALSE set by the export param of add_module() ... further arguments  These parameters might not be used inside your own function, but they need to be set in the function skeleton, for compatibility reasons.\nModule template examples my_tmpl \u0026lt;- function(name, path, export, ...){ # Define a template that write to the # module file write(name, path) } golem::add_module(name = \u0026quot;custom\u0026quot;, module_template = my_tmpl) my_other_tmpl \u0026lt;- function(name, path, export, ...){ # Copy and paste a file from somewhere file.copy(..., path) } golem::add_module(name = \u0026quot;custom\u0026quot;, module_template = my_other_tmpl)  JS \u0026amp; CSS templates About JS \u0026amp; CSS templates JavaScript and CSS templates work the same way as the module templates, and are used during the creation of JavaScript files, JavaScript handlers and CSS files, i.e. inside add_js_file(), add_js_handler() and add_css_file().\nThe function is called after the file creation. Here is a step by step of what happens when these functions are called:\n Name is created The path is generated If the file already exists, it opens the file If the file doesn't exist, R creates it and the template function is called File is potentially open  (Note that the template function is not called if the file already exists).\nYou can then define your own function inside your {golem} based application, but chances are you will be defining them into your own package.\nFile template functions will receive, by default, the following parameters from the add_*() function.\n path: the path to the file ... further arguments  These parameters might not be used inside your own function, but they need to be set in the function skeleton, for compatibility reasons.\nJS \u0026amp; CSS templates examples my_tmpl \u0026lt;- function(path, ...){ # Define a template that only write the name of the # module in the file write_there \u0026lt;- function(...){ write(..., file = path, append = TRUE) } write_there(\u0026quot;body {\u0026quot;) write_there(\u0026quot; background-color:red;\u0026quot;) write_there(\u0026quot;}\u0026quot;) } golem::add_css_file(name = \u0026quot;custom\u0026quot;, template = my_tmpl)  Support for the latest {shiny} features New module skeleton {shiny} 1.5.0, has introduced a new skeleton when it comes to modules. {golem} now supports this new skeleton:\n\u0026gt; golem::add_module(\u0026quot;plop\u0026quot;) ✓ File created at R/mod_plop.R  #' plop UI Function #' #' @description A shiny Module. #' #' @param id,input,output,session Internal parameters for {shiny}. #' #' @noRd #' #' @importFrom shiny NS tagList mod_plop_ui \u0026lt;- function(id){ ns \u0026lt;- NS(id) tagList( ) } #' plop Server Functions #' #' @noRd mod_plop_server \u0026lt;- function(id){ moduleServer( id, function(input, output, session){ ns \u0026lt;- session$ns }) } ## To be copied in the UI # mod_plop_ui(\u0026quot;plop_ui_1\u0026quot;) ## To be copied in the server # mod_plop_server(\u0026quot;plop_ui_1\u0026quot;)  Disabling auto-load Since {shiny} 1.5.0, the R folder is automatically sourced, in alphabetical order, when the app is loaded via runApp()\u0026mdash;this used to be opt-in but is now opt-out.\nThis can cause some troubles with {golem} package structure in some (rare) cases, and only when deploying to RStudio platform via golem::add_rstudioconnect_file() and friends\u0026mdash;there is no issue with the package structure and the load whenever you load golem via the golem::run_dev() or via myapp::run_app().\nThis behavior can be opt-out via two mechanisms: options(shiny.autoload.r=FALSE), or via a file called _disable_autoload.R in the R/ folder. Reliably setting options in all projects can create some issues, so we have chosen to go for the _disable_autoload.R solution.\nThis file is now created whenever you called one of golem::add_rstudioconnect_file(), golem::add_shinyappsio_file() or golem::add_shinyserver_file(). You can also force its creation via golem::disable_autoload().\nImportant note. This will still print a warning to your console:\nWarning in loadSupport(appDir, renv = sharedEnv, globalrenv = NULL) : Loading R/ subdirectory for Shiny application, but this directory appears to contain an R package. Sourcing files in R/ may cause unexpected behavior.  This is unfortunately because, at the time of writing these lines, {shiny} doesn't remove this warning when the _disable_autoload.R file is there, so this warning will be printed to your logs. You can safely ignore it for now, as long as this behavior does not change (if it ever changes) in the {shiny} package. There is an issue open on the {shiny} repo right now, so feel free to watch the progress there!\nMisc Here are a selection of changes and new features in this new version:\n  You no longer need to source the dev/run_dev.R script and can call the golem::run_dev() function from your console.\n  add_html_template() creates an empty HTML template inside your app.\n  golem::add_js_binding and golem::add_js_output_binding create a skeleton for JavaScript bindings.\n  use_external_file, use_external_css_file, use_external_js_file, and use_external_html_template download external files from URL and add them to the www folder. They all have a use_internal_ counterpart that copies files from the local computer.\n  The sanity_check() function does a series of checks inside the current project.\n  Soft deprecation We're planning on deprecating the add_ui_server_files() function. Feel free to comment on ThinkR-open/golem/issues/445 if you'd like it to stay there.\nUpdating your old projects If you've built a project with an older version of {golem}, there should be no re-engineering to do, everything should still be compatible.\nOne change though might be in the way you deploy your app on RStudio platforms, which is related to the way {shiny} now handles the package structure. Just run golem::disable_autoload() to add the support.\nIf ever you find any other issues with the new version of {golem}, please feel free to open an issue on the repository.\nFeedback and questions We're always happy to get new ideas and question on {golem}!\nIf you have a feature idea, or find a bug, please open an issue.\nThe best places to ask question are either the GitHub \u0026ldquo;Discussions\u0026rdquo; panel, or StackOverflow, using the golem tag.\nThanks We want to thank all the people who have contributed to this version, either by opening PR, feature requests, or bug report.\n@abidawson, @abnercasallo, @aftonsteps, @AMillanFL, @antoine-sachet, @ArthurPERE, @artpulsion, @cderv, @chintanp, @ChrisBeeley, @CorradoLanera, @csgillespie, @daattali, @DivadNojnarg, @durandsinclair, @dwhdai, @dylanrussellmd, @earnaud, @fBedecarrats, @feddelegrand7, @fizic37, @fvitalini, @gacolitti, @genobobeno, @hadley, @HanjoStudy, @henrique1008, @jacksonschan, @jacobwindsor, @jaybee84, @jcrodriguez1989, @jennahamlin, @julianstanley, @KasperThystrup, @Kastakin, @KoderKow, @kprimice, @mahelious, @MayaGans, @mcsiple, @michaelhogersnplm, @moodymudskipper, @mraess, @novica, @nvelden, @quickbendelat, @rgaube, @riccardoporreca, @RichardPilbery, @robertoromor, @seanhardison1, @ShinyFabio, @sjspielman, @Swechhya, @TimotheeTournier, @VincentAlcazer, @Welsh44, @yogat3ch, @yonicd, @zchmielewska, and @ZimmermannYves.\n","date":1622160000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1622233787,"objectID":"fed3403001310601ee690233b10ad1e7","permalink":"/post/golem-0.3.1-release-on-cran/","publishdate":"2021-05-28T00:00:00Z","relpermalink":"/post/golem-0.3.1-release-on-cran/","section":"post","summary":"The new version of {golem} is now available on CRAN","tags":["golem","package"],"title":"About {golem} 0.3.1","type":"post"},{"authors":["Colin Fay"],"categories":["shinipsum","release"],"content":"I'm very happy to announce that {shinipsum} is now on CRAN!\n{shinipsum} is a package that can help you build {shiny} prototypes faster by providing a series of functions that can generate random elements to populate your UI. If you are familiar with \u0026ldquo;lorem ipsum\u0026rdquo;, the fake text generator that is used in software design as a placeholder for text, the idea is the same: generating placeholders for Shiny outputs.\n{shinipsum} can be installed from CRAN with:\ninstall.packages(\u0026quot;shinipsum\u0026quot;)  You can install this package from GitHub with:\nremotes::install_github(\u0026quot;Thinkr-open/shinipsum\u0026quot;)  In this package, a series of functions that generates random placeholders. For example, random_ggplot() generates random {ggplot2} elements:\nlibrary(shinipsum) library(ggplot2)  random_ggplot() + labs(title = \u0026quot;Random plot\u0026quot;)  random_ggplot() + labs(title = \u0026quot;Random plot\u0026quot;)  Of course, the idea is to combine this with a Shiny interface, for example random_ggplot() will be used with a renderPlot() and plotOutput(). And as we want to prototype but still be close to what your final application will look like, these functions take arguments that can shape the output: for example, random_ggplot() has a type parameter that can help you select a specific geom.\nlibrary(shiny) library(shinipsum) library(DT) ui \u0026lt;- fluidPage( h2(\u0026quot;A Random DT\u0026quot;), DTOutput(\u0026quot;data_table\u0026quot;), h2(\u0026quot;A Random Plot\u0026quot;), plotOutput(\u0026quot;plot\u0026quot;), h2(\u0026quot;A Random Text\u0026quot;), tableOutput(\u0026quot;text\u0026quot;) ) server \u0026lt;- function(input, output, session) { output$data_table \u0026lt;- DT::renderDT({ random_DT(5, 5) }) output$plot \u0026lt;- renderPlot({ random_ggplot(type = \u0026quot;point\u0026quot;) }) output$text \u0026lt;- renderText({ random_text(nwords = 50) }) } shinyApp(ui, server)  Other {shinipsum} functions include:\n tables:  random_table(nrow = 3, ncol = 10)  ## agegp alcgp tobgp ncases ncontrols agegp.1 alcgp.1 tobgp.1 ncases.1 ## 1 25-34 0-39g/day 0-9g/day 0 40 25-34 0-39g/day 0-9g/day 0 ## 2 25-34 0-39g/day 10-19 0 10 25-34 0-39g/day 10-19 0 ## 3 25-34 0-39g/day 20-29 0 6 25-34 0-39g/day 20-29 0 ## ncontrols.1 ## 1 40 ## 2 10 ## 3 6   print outputs:  random_print(type = \u0026quot;model\u0026quot;)  ## ## Shapiro-Wilk normality test ## ## data: datasets::airquality$Ozone ## W = 0.87867, p-value = 2.79e-08  \u0026hellip; and text, image, ggplotly, dygraph, and DT.\nLearn more about {shinipsum}:\n {shinipsum} website Chapter 10 Building an “ipsum-app” - Engineering Production-Grade Shiny Apps  ","date":1589068800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589142587,"objectID":"37a2afb9049372689e5e47763ff18087","permalink":"/post/2020-05-10_shinipsum-cran-realease/","publishdate":"2020-05-10T00:00:00Z","relpermalink":"/post/2020-05-10_shinipsum-cran-realease/","section":"post","summary":"{shinipsum} is now available on CRAN","tags":["shinipsum","package"],"title":"{shinipsum} is now on CRAN","type":"post"},{"authors":["Colin Fay"],"categories":["stream"],"content":"Third live stream 🤓  👨‍💻 Colin Fay, @_ColinFay   🔗 https://www.twitch.tv/thinkr_fr   ⏳ 2020-04-02 21:00 Paris Time.   See Event in Other Timezones   $UTC [1] \u0026quot;2020-04-02 19:00:00 UTC\u0026quot; $`America/New_York` [1] \u0026quot;2020-04-02 15:00:00 EDT\u0026quot; $`America/Los_Angeles` [1] \u0026quot;2020-04-02 12:00:00 PDT\u0026quot; $`Australia/Sydney` [1] \u0026quot;2020-04-03 06:00:00 AEDT\u0026quot;   ","date":1585861200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585861200,"objectID":"01bead2e8fb1d8084e6737036280d2dc","permalink":"/talk/2020-04-02-twitch/","publishdate":"2020-03-31T00:00:00Z","relpermalink":"/talk/2020-04-02-twitch/","section":"talk","summary":"Overview of {hexmake}.","tags":["golem"],"title":"Third live stream","type":"talk"},{"authors":["Colin Fay"],"categories":["stream"],"content":"Second live stream 🎂  👨‍💻 Colin Fay, @_ColinFay   🔗 https://www.twitch.tv/thinkr_fr   ⏳ __2020-01-21 21.00 Paris Time__.   See Event in Other Timezones   $UTC [1] \u0026quot;2020-01-21 20:00:00 UTC\u0026quot; $`America/New_York` [1] \u0026quot;2020-01-21 15:00:00 EST\u0026quot; $`America/Los_Angeles` [1] \u0026quot;2020-01-21 12:00:00 PST\u0026quot; $`Australia/Sydney` [1] \u0026quot;2020-01-22 07:00:00 AEDT\u0026quot;   ","date":1579813200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579813200,"objectID":"c90898aae1cff2272ef54a794af6dad9","permalink":"/talk/2020-01-23-twitch/","publishdate":"2017-01-20T00:00:00Z","relpermalink":"/talk/2020-01-23-twitch/","section":"talk","summary":"Live stream on building a {golem} app.","tags":["golem"],"title":"Second live stream","type":"talk"},{"authors":["Colin Fay"],"categories":["stream"],"content":"First live stream 🎂  👨‍💻 Colin Fay, @_ColinFay   🔗 https://www.twitch.tv/thinkr_fr   ⏳ __2020-01-13 21.00 Paris Time__.   See Event in Other Timezones   $UTC [1] \u0026quot;2020-01-13 20:00:00 UTC\u0026quot; $`America/New_York` [1] \u0026quot;2020-01-13 15:00:00 EST\u0026quot; $`America/Los_Angeles` [1] \u0026quot;2020-01-13 12:00:00 PST\u0026quot; $`Australia/Sydney` [1] \u0026quot;2020-01-14 07:00:00 AEDT\u0026quot;   ","date":1578949200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578949200,"objectID":"70ea89fa6d9a02db0a6b536c8d7b053d","permalink":"/talk/2020-01-13-twitch/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/2020-01-13-twitch/","section":"talk","summary":"Live stream on building a {golem} app.","tags":["golem"],"title":"First live stream 🎂","type":"talk"},{"authors":null,"categories":null,"content":"","date":1578614400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578614400,"objectID":"9700fbe6fb549a8466173091aa66a529","permalink":"/stream/","publishdate":"2020-01-10T00:00:00Z","relpermalink":"/stream/","section":"","summary":"{golemverse} streams","tags":null,"title":"Streams","type":"widget_page"},{"authors":["Sébastien Rochette"],"categories":["package"],"content":"The goal of {shinipsum} is to provide random shiny elements for easiest shiny app prototyping, so that you can focus on building the frontend before building the backend.\nMore documentation of shinipsum on its dedicated website\n","date":1575936000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575993653,"objectID":"cf7050c8c657082546869d130f79dc58","permalink":"/packages_list/shinipsum-package/","publishdate":"2019-12-10T00:00:00Z","relpermalink":"/packages_list/shinipsum-package/","section":"packages_list","summary":"The goal of {shinipsum} is to provide random shiny elements for easiest shiny app prototyping, so that you can focus on building the frontend before building the backend.\nMore documentation of shinipsum on its dedicated website","tags":["shinipsum"],"title":"{shinipsum}","type":"packages_list"},{"authors":[],"categories":["book"],"content":"The book is in construction here: https://engineering-shiny.org\n","date":1575849600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575909164,"objectID":"6b0775083172ca2005643d68c6b4745b","permalink":"/publication/building-big-shiny-apps-a-workflow-building-big-shiny-apps-a-workflow/","publishdate":"2019-12-09T00:00:00Z","relpermalink":"/publication/building-big-shiny-apps-a-workflow-building-big-shiny-apps-a-workflow/","section":"publication","summary":"The book is in construction here: https://engineering-shiny.org","tags":["shiny","bookdown"],"title":"Building Big Shiny Apps - A Workflow","type":"publication"},{"authors":["Sébastien Rochette"],"categories":["golem"],"content":"{golem} is an opinionated framework for building production-grade shiny applications.\nMore documentation on {golem} website here\n","date":1575849600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575903909,"objectID":"f7b5435858ab650845dc06ba3e17dc77","permalink":"/packages_list/golem/","publishdate":"2019-12-09T00:00:00Z","relpermalink":"/packages_list/golem/","section":"packages_list","summary":"{golem} is an opinionated framework for building production-grade shiny applications.\nMore documentation on {golem} website here","tags":["golem"],"title":"{golem}","type":"packages_list"},{"authors":["Cervan Girard"],"categories":["shinysnippets"],"content":"Thanks to {shinysnippets} package, you will save development time. No more need to type obverseEvent(), withProgress() or module_1_server()`/module_1_ui()` \u0026hellip;\nUse the power of Rstudio snippets !\nMore documentation on {shinysnippets}\n","date":1575158400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1575194409,"objectID":"fc88477161e14a83e736aa118fc76c6b","permalink":"/packages_list/shinysnippets/","publishdate":"2019-12-01T00:00:00Z","relpermalink":"/packages_list/shinysnippets/","section":"packages_list","summary":"Thanks to {shinysnippets} package, you will save development time. No more need to type obverseEvent(), withProgress() or module_1_server()`/module_1_ui()` \u0026hellip;\nUse the power of Rstudio snippets !\nMore documentation on {shinysnippets}","tags":["shinysnippets"],"title":"{shinysnippets}","type":"packages_list"},{"authors":[],"categories":["golem","release"],"content":"golem (v0.1) A Framework for Building Robust Shiny Apps:\n {golem} on CRAN {golem} no GitHub pkgdown and vignettes  ","date":1564963200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1565018470,"objectID":"dabf355f4f64872f583906ed3f5cd35d","permalink":"/post/golem-0.1.0-release-on-cran/","publishdate":"2019-08-05T00:00:00Z","relpermalink":"/post/golem-0.1.0-release-on-cran/","section":"post","summary":"First version of {golem} is on CRAN","tags":["golem","package"],"title":"{golem} 0.1.0 has been released on CRAN","type":"post"},{"authors":null,"categories":null,"content":"","date":1547942400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1547942400,"objectID":"e9d4ca93fd565845d3ef0ae83cbf88d3","permalink":"/documentation/","publishdate":"2019-01-20T00:00:00Z","relpermalink":"/documentation/","section":"","summary":"Documentation for the {golemverse}","tags":null,"title":"Documentation","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"9eb50f9088083bebcb7e4cf99e22b9ed","permalink":"/news/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/news/","section":"","summary":"Blog post in the {golemverse}","tags":null,"title":"Blog","type":"widget_page"},{"authors":null,"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546300800,"objectID":"df96915dedf49245642651ffff54f1db","permalink":"/packages/","publishdate":"2019-01-01T00:00:00Z","relpermalink":"/packages/","section":"","summary":"List of packages in the golemverse","tags":null,"title":"Packages","type":"widget_page"}]