[
  {
    "objectID": "packages/fakir/index.html",
    "href": "packages/fakir/index.html",
    "title": "fakir",
    "section": "",
    "text": "{fakir} provides a set of functions to generate random data that can be used for prototyping.\n{fakir} contains a set of functions for creating synthetic datasets that mimic real-world data, allowing users to test their code under a variety of different scenarios.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/shinipsum/index.html",
    "href": "packages/shinipsum/index.html",
    "title": "shinipsum",
    "section": "",
    "text": "{shinipsum} provides a set of functions to generate dummy widgets and content for {shiny} applications.\nThis R package is a simple package designed to generate placeholder elements for {shiny} applications. It provides a set of functions that can be used to generate ‚Äòlorem ipsum‚Äô style elements that can be used as filler in Shiny applications while prototyping.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/minifyr/index.html",
    "href": "packages/minifyr/index.html",
    "title": "minifyr",
    "section": "",
    "text": "Minify CSS, HTML and JavaScript Files.\nA wrapper around the node-minify NodeJS module that allows to minify CSS, HTML, and JavaScript files from the R console.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/index.html",
    "href": "packages/index.html",
    "title": "Packages",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "packages/index.html#package-details",
    "href": "packages/index.html#package-details",
    "title": "Packages",
    "section": "",
    "text": "No matching items"
  },
  {
    "objectID": "packages/index.html#cran-status-monthly-download-and-other-stats",
    "href": "packages/index.html#cran-status-monthly-download-and-other-stats",
    "title": "Packages",
    "section": "CRAN status, Monthly download, and other stats",
    "text": "CRAN status, Monthly download, and other stats\n\n\n\n\n\n\n\n\n\n\n\n\nPackage\nLifecycle\nCRAN Version\nMonthly Downloads\nR-CMD-Check\nGitHub Stars\nGitHub Issues\n\n\n\n\ngolem\n\n \n \n \nStars\nIssues\n\n\nshinipsum\n\n \n \n \nStars\nIssues\n\n\nfakir\n\n \n \n \nStars\nIssues\n\n\ngargoyle\n\n \n \n \nStars\nIssues\n\n\ndockerfiler\n\n \n \n \nStars\nIssues\n\n\ngemstones\n\n \n \n \nStars\nIssues\n\n\nelvis\n\n \n \n \nStars\nIssues\n\n\nbank\n\n \n \n \nStars\nIssues\n\n\nw3css\n\n \n \n \nStars\nIssues\n\n\nbrochure\n\n \n \n \nStars\nIssues\n\n\nghooks\n\n \n \n \nStars\nIssues\n\n\nskeleton\n\n \n \n \nStars\nIssues\n\n\nshinidraw\n\n \n \n \nStars\nIssues\n\n\n\n\n\nNote that CRAN version & Monthly Downloads are shown only for packages on CRAN"
  },
  {
    "objectID": "packages/ghooks/index.html",
    "href": "packages/ghooks/index.html",
    "title": "ghooks",
    "section": "",
    "text": "{golem} hooks.\nThe goal of {ghooks} is to provide {golem} hooks for standard {shiny} apps.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/golem/index.html",
    "href": "packages/golem/index.html",
    "title": "golem",
    "section": "",
    "text": "{golem} is an opinionated framework for building production-grade {shiny} applications.\nIt provides a set of tools to help you build a {shiny} application in a structured way automates routine tasks, facilitate deployment, and is extendable to feat your needs.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/skeleton/index.html",
    "href": "packages/skeleton/index.html",
    "title": "skeleton",
    "section": "",
    "text": "Skeleton CSS in {shiny}.\n{skeleton} brings the skeleton CSS to {shiny} for lightweight, minimal and elegant web apps .\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/brochure/index.html",
    "href": "packages/brochure/index.html",
    "title": "brochure",
    "section": "",
    "text": "Natively multipage {shiny} apps.\nThe goal of {brochure} is to provide a mechanism for creating natively multi-page {shiny}applications, i.e that can serve content on multiple endpoints.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "stream/2020-04-02-twitch/index.html",
    "href": "stream/2020-04-02-twitch/index.html",
    "title": "Overview of {hexmake}",
    "section": "",
    "text": "Colin will be live talking about the internals of {hexmake}.\n\n\nüë®‚Äçüíª Colin Fay, @_ColinFay\n\n\nüîó https://www.twitch.tv/thinkr_fr\n\n\n‚è≥ 2020-04-02 21:00:00 Paris Time.\n\n\n\n\n See Event in Other Timezones \n\n\ndate &lt;- lubridate::ymd_hms(\"2020-04-02 21:00:00\", tz = \"Europe/Paris\")\n\nlubridate::with_tz(date, \"UTC\")\n\n[1] \"2020-04-02 19:00:00 UTC\"\n\nlubridate::with_tz(date, \"America/New_York\")\n\n[1] \"2020-04-02 15:00:00 EDT\"\n\nlubridate::with_tz(date, \"America/Los_Angeles\")\n\n[1] \"2020-04-02 12:00:00 PDT\"\n\nlubridate::with_tz(date, \"Australia/Sydney\")\n\n[1] \"2020-04-03 06:00:00 AEDT\""
  },
  {
    "objectID": "stream/2020-01-13-twitch/index.html",
    "href": "stream/2020-01-13-twitch/index.html",
    "title": "First live stream üéÇ",
    "section": "",
    "text": "Colin will live stream on Twitch how to build a Shiny application with {golem}.\n\n\nüë®‚Äçüíª Colin Fay, @_ColinFay\n\n\nüîó https://www.twitch.tv/thinkr_fr\n\n\n‚è≥ 2020-01-13 21:00:00 Paris Time.\n\n\n\n\n See Event in Other Timezones \n\n\ndate &lt;- lubridate::ymd_hms(\"2020-01-13 21:00:00\", tz = \"Europe/Paris\")\n\nlubridate::with_tz(date, \"UTC\")\n\n[1] \"2020-01-13 20:00:00 UTC\"\n\nlubridate::with_tz(date, \"America/New_York\")\n\n[1] \"2020-01-13 15:00:00 EST\"\n\nlubridate::with_tz(date, \"America/Los_Angeles\")\n\n[1] \"2020-01-13 12:00:00 PST\"\n\nlubridate::with_tz(date, \"Australia/Sydney\")\n\n[1] \"2020-01-14 07:00:00 AEDT\""
  },
  {
    "objectID": "stream/2020-01-23-twitch/index.html",
    "href": "stream/2020-01-23-twitch/index.html",
    "title": "Second live stream",
    "section": "",
    "text": "Colin will live stream on Twitch how to build a Shiny application with {golem}.\n\n\nüë®‚Äçüíª Colin Fay, @_ColinFay\n\n\nüîó https://www.twitch.tv/thinkr_fr\n\n\n‚è≥ 2020-01-23 21:00:00 Paris Time.\n\n\n\n\n See Event in Other Timezones \n\n\ndate &lt;- lubridate::ymd_hms(\"2020-01-23 21:00:00\", tz = \"Europe/Paris\")\n\nlubridate::with_tz(date, \"UTC\")\n\n[1] \"2020-01-23 20:00:00 UTC\"\n\nlubridate::with_tz(date, \"America/New_York\")\n\n[1] \"2020-01-23 15:00:00 EST\"\n\nlubridate::with_tz(date, \"America/Los_Angeles\")\n\n[1] \"2020-01-23 12:00:00 PST\"\n\nlubridate::with_tz(date, \"Australia/Sydney\")\n\n[1] \"2020-01-24 07:00:00 AEDT\""
  },
  {
    "objectID": "news/golem-hacktoberfest-2021/index.html",
    "href": "news/golem-hacktoberfest-2021/index.html",
    "title": "Join HacktoberFest 2021 with {golem} (and more)!",
    "section": "",
    "text": "Join us for Hacktoberfest 2021 with {golem}!\nHacktoberfest is an online event, happening all over the world, where everyone is invited to open a pull request on a repo that has issues labelled hacktoberfest. The idea of this event is to gather developers (newbies or seasoned), and make them work together on open source projects.\nFor this second year, I‚Äôm happy to invite developers from the R community to take part to Hacktoberfest with {golem}. I‚Äôve started to label some issues inside the repository with the hacktoberfest label, so that you can join the party, starting tomorrow!\nEvery time you‚Äôll open an issue with this label, you‚Äôll also find two other labels: the difficulty level (novice, intermediate, advanced), and a time estimate (low, medium, high). This will help you evaluate if you can try and tackle this issue or not.\nYou‚Äôll find them all on the GitHub repository. Feel free to leave a comment on the issue you‚Äôd like to tackle, and of course to ask questions if the issue is not detailed enough.\nI‚Äôm planning on release a minor version of {golem} (0.3.1) at the end of this month, with all the new features and bug fixes that we will all have worked on during the month ü§ò\nYou don‚Äôt feel like working on {golem}? We have also labelled other repositories inside the ThinkR GitHub organisation with the hacktoberfest tag:\n\n{attachment}, a package for working with dependencies in your scripts, Rmds, and packages.\n{fusen}, a package to build a package from a Rmd.\n{shinipsum}, a lorem-ipsum generator for {shiny} elements.\n{fakir}, a fake data generator.\nCompanies, Officials and NGO Using R, our collaborative list of R in the real world.\nAnd more‚Ä¶\n\nSee you on GitHub!"
  },
  {
    "objectID": "news/skeleteon-css-in-shiny/index.html",
    "href": "news/skeleteon-css-in-shiny/index.html",
    "title": "Minimalist and Elegant {shiny} apps with {skeleton}",
    "section": "",
    "text": "A dead simple, responsive, minimalist CSS framework.\nSkeleton css is a ‚Äúa dead simple, responsive‚Äù CSS boilerplate focused on mobile-first design and a minimalistic approach. It comes with a set of pre-defined styles for basic HTML elements such as typography, forms, buttons, tables, and grids, which can be easily customized. It is built with a 12-column grid system, making it easy to create flexible and responsive layouts for different screen sizes and devices."
  },
  {
    "objectID": "news/skeleteon-css-in-shiny/index.html#skeleton",
    "href": "news/skeleteon-css-in-shiny/index.html#skeleton",
    "title": "Minimalist and Elegant {shiny} apps with {skeleton}",
    "section": "{skeleton}",
    "text": "{skeleton}\nI‚Äôm very happy to announce that the {shiny} wrapper for this framework is now fully functional, and available to download with:\npak::pak(\"ColinFay/skeleton\")\nFor a demo of an app built with {skeleton}, you can browse https://connect.thinkr.fr/prenoms/."
  },
  {
    "objectID": "news/skeleteon-css-in-shiny/index.html#building-an-app-with-skeleton",
    "href": "news/skeleteon-css-in-shiny/index.html#building-an-app-with-skeleton",
    "title": "Minimalist and Elegant {shiny} apps with {skeleton}",
    "section": "Building an app with {skeleton}",
    "text": "Building an app with {skeleton}\n\nBasic apps\nBuilding an app with {skeleton} follows the same spirit as with {shiny} standard components: you start with a page, define a row, and this row can be split into 12 columns.\nlibrary(shiny)\nlibrary(skeleton)\n\nui &lt;- sk_page(\n  h1(\"Hello world\"),\n  sk_row(\n    sk_col(\n      width = 6,\n      \"Hello\"\n    ),\n    sk_col(\n      width = 6,\n      \"World\"\n    )\n  ),\n  sk_row(\n    sk_col(\n      width = 12,\n      plotOutput(\"plot1\")\n    )\n  )\n)\n\nserver &lt;- function(input, output) {\n  output$plot1 &lt;- renderPlot({\n    plot(mtcars)\n  })\n}\n\nshinyApp(ui, server)\n\n\nBuilt-in dashboard\n{skeleton} also comes with a built-it dashboard mechanism, that can be defined with:\nsk_nav(\n  sk_nav_item(\n    id = \"one\",\n    title = \"ONE\",\n    ui = sk_row(\n      width = sk_col(\n        6,\n        \"Hello plot1\"\n      ),\n      sk_col(\n        width = 6,\n        plotOutput(\"plot1\")\n      )\n    )\n  )\n)\nAnd for a full app:\nlibrary(shiny)\nlibrary(skeleton)\nui &lt;- sk_page(\n  sk_row(\n    h2(\"A dead simple, responsive boilerplate.\"),\n  ),\n  sk_nav(\n    sk_nav_item(\n      id = \"one\",\n      title = \"ONE\",\n      ui = sk_row(\n        sk_col(\n          6,\n          \"Hello plot1\"\n        ),\n        sk_col(\n          6,\n          plotOutput(\"plot1\")\n        )\n      )\n    ),\n    sk_nav_item(\n      id = \"two\",\n      title = \"TWO\",\n      ui = sk_row(\n        sk_col(\n          6,\n          plotOutput(\"plot2\")\n        ),\n        sk_col(\n          6,\n          \"Hello plot2\"\n        ),\n      )\n    )\n  )\n)\nshinyApp(ui, function(input, output) {\n  output$plot1 &lt;- renderPlot({\n    plot(mtcars)\n  })\n  output$plot2 &lt;- renderPlot({\n    plot(airquality)\n  })\n})\nIf you want to see a real life example of a dashboard built with {skeleton}, feel free to browse the source code of the prenoms app at https://github.com/ThinkR-open/prenoms-app.\n\n\n{golem} hooks\nYou can get a boilerplate of a page or a dashboard when creating an app with {golem}, using the built-in {golem} hooks:\ngolem::create_golem(\n  \"skboilerplate\",\n  project_hook = skeleton::ghook_sk_boilerplate\n)\ngolem::create_golem(\n  \"skdashboard\",\n  project_hook = skeleton::ghook_sk_dashboard\n)"
  },
  {
    "objectID": "news/skeleteon-css-in-shiny/index.html#contribution-and-feedback",
    "href": "news/skeleteon-css-in-shiny/index.html#contribution-and-feedback",
    "title": "Minimalist and Elegant {shiny} apps with {skeleton}",
    "section": "Contribution and feedback",
    "text": "Contribution and feedback\nIf you have any feedback, feel free to open an issue at https://github.com/ColinFay/skeleton!"
  },
  {
    "objectID": "news/golem-0.3.1-release-on-cran/index.html",
    "href": "news/golem-0.3.1-release-on-cran/index.html",
    "title": "About {golem} 0.3.1",
    "section": "",
    "text": "The new version of {golem} (0.3.1) has been available on CRAN üéâ for about a month now. This new version includes a lot of new things, but we notably focused on working on two important new features: allowing you to extend {golem} via templates, and supporting for the latest changes in {shiny}."
  },
  {
    "objectID": "news/golem-0.3.1-release-on-cran/index.html#extending-golem",
    "href": "news/golem-0.3.1-release-on-cran/index.html#extending-golem",
    "title": "About {golem} 0.3.1",
    "section": "Extending {golem}",
    "text": "Extending {golem}\nOne of the challenges when it comes to building apps in a production context is that you might be repeating some patterns over and over again: adding the same CSS in every app, creating specific functions, setting a license, adding internal packages as dependencies, etc.\nThe key idea with {golem} is to lower the number of repetitive tasks you have to perform during the engineering of your app. We try to achieve that by providing tools that automate these common tasks. But before version 0.3, there was no way to optimize the ‚Äúbusiness specific‚Äù, internal tasks of adding files, functions, or templating modules. This is now possible with this new release of {golem}, which introduces the concept of ‚Äúgolem templates‚Äù: functions that can be used for project hooks, module templates, and JavaScript and CSS file creation.\n\nProject Hooks\n\nAbout project hooks\nA project hook is a functions called inside create_golem().\nIt allows you to define custom behaviors when creating {golem} based apps, and can be used for:\n\nAdding a different front-end template in R/app_ui.R\nChanging configuration options in inst/golem-config.yml\nCopying external files in inst/app/www\nRemoving a file from the default template\netc.\n\nThis function is called just after the default project has been created, and is executed in the directory of the created package. Here is a step by step of what happens when a project is created with {golem}:\n\nThe package name is generated\nThe directory that will receive the package is created\nDefault {golem} template is copied to this directory\nR moves to the newly created project, and runs the project_hook function\nR moves back to the previous directory\nIf in RStudio, the project is open\n\nThe project_hook function takes three mandatory parameters, which are passed from create_golem:\n\npath: the full path of the directory\npackage_name: the name of the package\n... : further arguments that can be passed from create_golem() when called from the command line\n\nThese parameters might not be used inside your own hook, but they need to be set in the hook function skeleton for compatibility reasons.\nThe best way to extend {golem} via a project hook is by defining a project_hook function in an external package. This will allow this function to be used inside the {golem} creation RStudio project creation widget:\n\n\n\nProject hook example\nRemoving the dev folder:\nno_dev &lt;- function(path, package_name, ...){\n   fs::dir_delete(\"dev\")\n}\ncreate_golem(\"ici\", project_hook = no_dev)\nCreate a CSS:\nnew_css &lt;- function(path, package_name, ...){\n\n  css_path &lt;- fs::path_abs(\"inst/app/www/custom.css\")\n\n  fs::file_create(css_path)\n\n  write_there &lt;- function(...){\n    write(..., file = css_path, append = TRUE)\n  }\n\n  write_there(\"body {\")\n  write_there(\"    background-color:red;\")\n  write_there(\"}\")\n\n  cli::cat_bullet(\"CSS generated\")\n\n}\ncreate_golem(\"ici\", project_hook = new_css)\n\n\n\nModule templates\n\nAbout module templates\nModule templates are called inside add_module.\nIt allows you to extend {golem} module template functionality by creating your own content inside the module file.\nThe function is called after the file(s) creation. Here is a step by step of what happens when the add_module function is called:\n\nThe module name is generated, and the R/ directory is created if needed\nThe fct_ and utils_ files are created if needed\nThe path to the module is generated\nIf the file already exists, it opens the file\nIf the file doesn‚Äôt exist, R creates the file and the module_template function is called\nFile is potentially open\n\n(Note that the template function is not called if the file already exists).\nModule template functions will receive, by default, the following parameters from add_modules().\n\nname: the name of the module\npath: the path to the file in R/\nexport: a TRUE/FALSE set by the export param of add_module()\n... further arguments\n\nThese parameters might not be used inside your own function, but they need to be set in the function skeleton, for compatibility reasons.\n\n\nModule template examples\nmy_tmpl &lt;- function(name, path, export, ...){\n  # Define a template that write to the\n  # module file\n  write(name, path)\n}\n\ngolem::add_module(name = \"custom\", module_template = my_tmpl)\n\nmy_other_tmpl &lt;- function(name, path, export, ...){\n  # Copy and paste a file from somewhere\n  file.copy(..., path)\n}\n\ngolem::add_module(name = \"custom\", module_template = my_other_tmpl)\n\n\n\nJS & CSS templates\n\nAbout JS & CSS templates\nJavaScript and CSS templates work the same way as the module templates, and are used during the creation of JavaScript files, JavaScript handlers and CSS files, i.e.¬†inside add_js_file(), add_js_handler() and add_css_file().\nThe function is called after the file creation. Here is a step by step of what happens when these functions are called:\n\nName is created\nThe path is generated\nIf the file already exists, it opens the file\nIf the file doesn‚Äôt exist, R creates it and the template function is called\nFile is potentially open\n\n(Note that the template function is not called if the file already exists).\nYou can then define your own function inside your {golem} based application, but chances are you will be defining them into your own package.\nFile template functions will receive, by default, the following parameters from the add_*() function.\n\npath: the path to the file\n... further arguments\n\nThese parameters might not be used inside your own function, but they need to be set in the function skeleton, for compatibility reasons.\n\n\nJS & CSS templates examples\nmy_tmpl &lt;- function(path, ...){\n   # Define a template that only write the name of the\n   # module in the file\n  write_there &lt;- function(...){\n    write(..., file = path, append = TRUE)\n  }\n\n  write_there(\"body {\")\n  write_there(\"    background-color:red;\")\n  write_there(\"}\")\n}\ngolem::add_css_file(name = \"custom\", template = my_tmpl)"
  },
  {
    "objectID": "news/golem-0.3.1-release-on-cran/index.html#support-for-the-latest-shiny-features",
    "href": "news/golem-0.3.1-release-on-cran/index.html#support-for-the-latest-shiny-features",
    "title": "About {golem} 0.3.1",
    "section": "Support for the latest {shiny} features",
    "text": "Support for the latest {shiny} features\n\nNew module skeleton\n{shiny} 1.5.0, has introduced a new skeleton when it comes to modules. {golem} now supports this new skeleton:\n&gt; golem::add_module(\"plop\")\n‚úì File created at R/mod_plop.R\n#' plop UI Function\n#'\n#' @description A shiny Module.\n#'\n#' @param id,input,output,session Internal parameters for {shiny}.\n#'\n#' @noRd\n#'\n#' @importFrom shiny NS tagList\nmod_plop_ui &lt;- function(id){\n  ns &lt;- NS(id)\n  tagList(\n\n  )\n}\n\n#' plop Server Functions\n#'\n#' @noRd\nmod_plop_server &lt;- function(id){\n  moduleServer( id, function(input, output, session){\n    ns &lt;- session$ns\n\n  })\n}\n\n## To be copied in the UI\n# mod_plop_ui(\"plop_ui_1\")\n\n## To be copied in the server\n# mod_plop_server(\"plop_ui_1\")\n\n\nDisabling auto-load\nSince {shiny} 1.5.0, the R folder is automatically sourced, in alphabetical order, when the app is loaded via runApp()‚Äîthis used to be opt-in but is now opt-out.\nThis can cause some troubles with {golem} package structure in some (rare) cases, and only when deploying to RStudio platform via golem::add_rstudioconnect_file() and friends‚Äîthere is no issue with the package structure and the load whenever you load golem via the golem::run_dev() or via myapp::run_app().\nThis behavior can be opt-out via two mechanisms: options(shiny.autoload.r=FALSE), or via a file called _disable_autoload.R in the R/ folder. Reliably setting options in all projects can create some issues, so we have chosen to go for the _disable_autoload.R solution.\nThis file is now created whenever you called one of golem::add_rstudioconnect_file(), golem::add_shinyappsio_file() or golem::add_shinyserver_file(). You can also force its creation via golem::disable_autoload().\nImportant note. This will still print a warning to your console:\nWarning in loadSupport(appDir, renv = sharedEnv, globalrenv = NULL) :\n  Loading R/ subdirectory for Shiny application, but this directory appears to contain an R package. Sourcing files in R/ may cause unexpected behavior.\nThis is unfortunately because, at the time of writing these lines, {shiny} doesn‚Äôt remove this warning when the _disable_autoload.R file is there, so this warning will be printed to your logs. You can safely ignore it for now, as long as this behavior does not change (if it ever changes) in the {shiny} package. There is an issue open on the {shiny} repo right now, so feel free to watch the progress there!"
  },
  {
    "objectID": "news/golem-0.3.1-release-on-cran/index.html#misc",
    "href": "news/golem-0.3.1-release-on-cran/index.html#misc",
    "title": "About {golem} 0.3.1",
    "section": "Misc",
    "text": "Misc\nHere are a selection of changes and new features in this new version:\n\nYou no longer need to source the dev/run_dev.R script and can call the golem::run_dev() function from your console.\nadd_html_template() creates an empty HTML template inside your app.\ngolem::add_js_binding and golem::add_js_output_binding create a skeleton for JavaScript bindings.\nuse_external_file, use_external_css_file, use_external_js_file, and use_external_html_template download external files from URL and add them to the www folder. They all have a use_internal_ counterpart that copies files from the local computer.\nThe sanity_check() function does a series of checks inside the current project."
  },
  {
    "objectID": "news/golem-0.3.1-release-on-cran/index.html#soft-deprecation",
    "href": "news/golem-0.3.1-release-on-cran/index.html#soft-deprecation",
    "title": "About {golem} 0.3.1",
    "section": "Soft deprecation",
    "text": "Soft deprecation\nWe‚Äôre planning on deprecating the add_ui_server_files() function. Feel free to comment on ThinkR-open/golem/issues/445 if you‚Äôd like it to stay there."
  },
  {
    "objectID": "news/golem-0.3.1-release-on-cran/index.html#updating-your-old-projects",
    "href": "news/golem-0.3.1-release-on-cran/index.html#updating-your-old-projects",
    "title": "About {golem} 0.3.1",
    "section": "Updating your old projects",
    "text": "Updating your old projects\nIf you‚Äôve built a project with an older version of {golem}, there should be no re-engineering to do, everything should still be compatible.\nOne change though might be in the way you deploy your app on RStudio platforms, which is related to the way {shiny} now handles the package structure. Just run golem::disable_autoload() to add the support.\nIf ever you find any other issues with the new version of {golem}, please feel free to open an issue on the repository."
  },
  {
    "objectID": "news/golem-0.3.1-release-on-cran/index.html#feedback-and-questions",
    "href": "news/golem-0.3.1-release-on-cran/index.html#feedback-and-questions",
    "title": "About {golem} 0.3.1",
    "section": "Feedback and questions",
    "text": "Feedback and questions\nWe‚Äôre always happy to get new ideas and question on {golem}!\nIf you have a feature idea, or find a bug, please open an issue.\nThe best places to ask question are either the GitHub ‚ÄúDiscussions‚Äù panel, or StackOverflow, using the golem tag."
  },
  {
    "objectID": "news/golem-0.3.1-release-on-cran/index.html#thanks",
    "href": "news/golem-0.3.1-release-on-cran/index.html#thanks",
    "title": "About {golem} 0.3.1",
    "section": "Thanks",
    "text": "Thanks\nWe want to thank all the people who have contributed to this version, either by opening PR, feature requests, or bug report.\n@abidawson, @abnercasallo, @aftonsteps, @AMillanFL, @antoine-sachet, @ArthurPERE, @artpulsion, @cderv, @chintanp, @ChrisBeeley, @CorradoLanera, @csgillespie, @daattali, @DivadNojnarg, @durandsinclair, @dwhdai, @dylanrussellmd, @earnaud, @fBedecarrats, @feddelegrand7, @fizic37, @fvitalini, @gacolitti, @genobobeno, @hadley, @HanjoStudy, @henrique1008, @jacksonschan, @jacobwindsor, @jaybee84, @jcrodriguez1989, @jennahamlin, @julianstanley, @KasperThystrup, @Kastakin, @KoderKow, @kprimice, @mahelious, @MayaGans, @mcsiple, @michaelhogersnplm, @moodymudskipper, @mraess, @novica, @nvelden, @quickbendelat, @rgaube, @riccardoporreca, @RichardPilbery, @robertoromor, @seanhardison1, @ShinyFabio, @sjspielman, @Swechhya, @TimotheeTournier, @VincentAlcazer, @Welsh44, @yogat3ch, @yonicd, @zchmielewska, and @ZimmermannYves."
  },
  {
    "objectID": "news/golem-0.3.2-release-on-cran/index.html",
    "href": "news/golem-0.3.2-release-on-cran/index.html",
    "title": "{golem} 0.3.2 is now available",
    "section": "",
    "text": "The new version of {golem} is now available!\nYou can download it from your favorite CRAN repository, or by running the following command:"
  },
  {
    "objectID": "news/golem-0.3.2-release-on-cran/index.html#whats-up-with-this-new-version",
    "href": "news/golem-0.3.2-release-on-cran/index.html#whats-up-with-this-new-version",
    "title": "{golem} 0.3.2 is now available",
    "section": "What‚Äôs up with this new version?",
    "text": "What‚Äôs up with this new version?\nIn this release, we have been focusing on a closer integration of tests inside the application building process, notably via Server function testing with Shiny, adding tests to fct, utils, and the ui & server functions that comes with {golem}.\nStarting with this version of {golem}, the integration of tests is opt-in:\ngolem::add_module(\"plop\", with_test = TRUE)\ngolem::add_fct(\"helpers\", with_test = TRUE)\nNote that these will be opt-out in the next release ‚Äî in other words they will be TRUE by default in the future.\nWe also have squashed a bunch of issues, for example amend_config() now keeps !expr (this use to cause some errors when the project was shared across multiple computers), expect_running() now finds R.exe, some adjustments has been made to fit new version of packages (for example testthat::expect_is is no longer used, and we require the correct version of {usethis}).\nFor a full list of changes, please refer to the NEWS.md file."
  },
  {
    "objectID": "news/golem-0.3.2-release-on-cran/index.html#whats-next",
    "href": "news/golem-0.3.2-release-on-cran/index.html#whats-next",
    "title": "{golem} 0.3.2 is now available",
    "section": "What‚Äôs next",
    "text": "What‚Äôs next\nNow that this version is stable, we can start working on the next version, which will be 0.4.0.\nOne of the thing that has been an issue with the way {golem} works is that it is used in two contexts: for dev, and for deployment.\nThe issue with that approach is that when deloying a golem-based app, you will have to install packages that are only used for dev, for exemple {usethis}, while they are not required to run the app.\nThis next version will focus on removing these packages from hard dependencies and move them to suggest, so that you can install them while developing but not when deploying, making the deployment process way easier and lighter. Note that the current version of {golem} (0.3.2) has already made a move in this direction by moving {dockerfiler} to Suggest, and making it only required when building the containers.\nFollow the Version 0.4.0 board for more!"
  },
  {
    "objectID": "news/golem-0.3.2-release-on-cran/index.html#thanks",
    "href": "news/golem-0.3.2-release-on-cran/index.html#thanks",
    "title": "{golem} 0.3.2 is now available",
    "section": "Thanks",
    "text": "Thanks\nWe want to thank all the people who have contributed to this version, either by opening PR, feature requests, or bug report.\n@abidawson, @abnercasallo, @aftonsteps, @AMillanFL, @antoine-sachet, @ArthurPERE, @artpulsion, @cderv, @chintanp, @ChrisBeeley, @CorradoLanera, @csgillespie, @daattali, @DivadNojnarg, @durandsinclair, @dwhdai, @dylanrussellmd, @earnaud, @fBedecarrats, @feddelegrand7, @fizic37, @fvitalini, @gacolitti, @genobobeno, @hadley, @HanjoStudy, @henrique1008, @jacksonschan, @jacobwindsor, @jaybee84, @jcrodriguez1989, @jennahamlin, @julianstanley, @KasperThystrup, @Kastakin, @KoderKow, @kprimice, @mahelious, @MayaGans, @mcsiple, @michaelhogersnplm, @moodymudskipper, @mraess, @novica, @nvelden, @quickbendelat, @rgaube, @riccardoporreca, @RichardPilbery, @robertoromor, @seanhardison1, @ShinyFabio, @sjspielman, @Swechhya, @TimotheeTournier, @VincentAlcazer, @Welsh44, @yogat3ch, @yonicd, @zchmielewska, and @ZimmermannYves."
  },
  {
    "objectID": "documentation/index.html",
    "href": "documentation/index.html",
    "title": "golemverse",
    "section": "",
    "text": "&lt;!doctype html&gt;"
  },
  {
    "objectID": "resources/index.html",
    "href": "resources/index.html",
    "title": "Documentation and resources",
    "section": "",
    "text": "Notes: The golemverse is constantly evolving. We gather here resources back from 2019, so some of the resources below might be outdated."
  },
  {
    "objectID": "resources/index.html#book",
    "href": "resources/index.html#book",
    "title": "Documentation and resources",
    "section": "Book üìö",
    "text": "Book üìö\n\n‚ÄúEngineering Production-grade Shiny Apps‚Äù"
  },
  {
    "objectID": "resources/index.html#blog-posts",
    "href": "resources/index.html#blog-posts",
    "title": "Documentation and resources",
    "section": "Blog posts ‚úçÔ∏è",
    "text": "Blog posts ‚úçÔ∏è\nFor the latest news, read the golemverse blog.\nYou can also browse the ‚Äúgolem‚Äù tag on the RTask website."
  },
  {
    "objectID": "resources/index.html#conferences-videos-podcasts",
    "href": "resources/index.html#conferences-videos-podcasts",
    "title": "Documentation and resources",
    "section": "Conferences, videos, podcasts ü§©",
    "text": "Conferences, videos, podcasts ü§©\nHave any resource to add here? Feel free to open an issue!."
  },
  {
    "objectID": "resources/index.html#section",
    "href": "resources/index.html#section",
    "title": "Documentation and resources",
    "section": "2022",
    "text": "2022\n\n2022-11-23 üé• Building Production-Quality Shiny Applications R/Pharma, by Eric Nantz\n2022-07-27 üé• üá´üá∑ D√©ploiement d‚Äôune application {shiny} dans docker avec {renv} et {golem}. Online, by Vincent Guyader\n2022-02-24 üé• üá´üá∑ De la Cr√©ation au D√©ploiement d‚ÄôApplications {shiny} avec {golem} Meetup R Lille et Tunis R User Group, by Margot Brard\n2022-02-16 üé• Building Multiple Page Shiny Apps with {brochure} NHSR, by Colin Fay"
  },
  {
    "objectID": "resources/index.html#section-1",
    "href": "resources/index.html#section-1",
    "title": "Documentation and resources",
    "section": "2021",
    "text": "2021\n\n2021-12-13 üé• Shiny Dev Series - Colin Fay is back Shiny Dev Series, by Colin Fay\n2021-10-15 Workshop - Good Practices for {shiny} development with {golem} EARL, by Colin Fay\n2021-07-12 üé• üá´üá∑ Conception d‚Äôapplications Shiny avec {golem} Online, by Vincent Guyader\n2021-05-18 üé• Mastering Shiny Book Club the golem package Online, by Colin Fay"
  },
  {
    "objectID": "resources/index.html#section-2",
    "href": "resources/index.html#section-2",
    "title": "Documentation and resources",
    "section": "2020",
    "text": "2020\n\n2020-10-01 Building a modularized Shiny App with {golem} and htmlwidgets CorrelCon, by Cedric Scherer\n2020-09-25 Workshop - Engineering {shiny} with {golem} WhyR, by Colin Fay\n2020-09-09 An overview of testing in R AI Testing online meetup, by Colin Fay\n2020-08-26 üé• Production R Shiny Made Easy‚Äì the Golem Framework Cleveland R User Group, by Liz Nelson\n2020-07-28 üé• Everything not Tested Will Eventually Fail NYR Meetup, by Colin Fay\n2020-06-18 Testing Shiny - Why, what, and how e-Rum, by Colin Fay\n2020-04-27 üé• Engineering Shiny Apps with {golem} BristolR Online Meetup, by Colin Fay\n2020-03-26 üé• Create meaningful fake tidy datasets in R using fakir Online, by Abdul Majed\n2020-03-06 Workshop - Building Successful Shiny Apps with {golem} satRday Johannesburg, by Colin Fay\n2020-01-30 üé• Production-grade Shiny Apps with golem rstudio::conf(2020L), by Colin Fay / Vincent Guyader"
  },
  {
    "objectID": "resources/index.html#section-3",
    "href": "resources/index.html#section-3",
    "title": "Documentation and resources",
    "section": "2019",
    "text": "2019\n\n2019-12-03 {golem} - Engineering Production-Grade Shiny Apps Barcelona R Meetup, by Colin Fay\n2019-11-20 üá´üá∑ Introduction √† {golem} en fran√ßais Online, by Cervan Girard\n2019-08-22 Creating (and Reviving) Shiny apps with {golem}! R Pharma 2019, by Eric Nantz\n2019-07-10 üé• A Framework for Building Robust & Production Ready Shiny Apps useR! 2019, by Vincent Guyader\n2019-06-19 üé• Hands-on demonstration of {golem} Shiny Dev Series, by Colin Fay\n2019-06-19 üé• golem} and Effective Shiny Development Methods Shiny Dev Series, by Colin Fay\n2019-05-24 Production-grade Shiny Apps with {golem} Paris, by Colin Fay"
  },
  {
    "objectID": "resources/index.html#cheatsheet",
    "href": "resources/index.html#cheatsheet",
    "title": "Documentation and resources",
    "section": "Cheatsheet üìë",
    "text": "Cheatsheet üìë\n\n{golem} cheatsheet"
  },
  {
    "objectID": "roadmap/index.html",
    "href": "roadmap/index.html",
    "title": "golemverse‚Äôs roadmap",
    "section": "",
    "text": "Here is a list of things the golemverse team plans on working on.\nIf you feel like helping, feel free to open an issue / discussion / PR on one of the repository."
  },
  {
    "objectID": "roadmap/index.html#short-term",
    "href": "roadmap/index.html#short-term",
    "title": "golemverse‚Äôs roadmap",
    "section": "Short term",
    "text": "Short term\n\n{golem} milestone 0.5.0 https://github.com/ThinkR-open/golem/milestone/1\nUpdate and rewrite the {golem} pkgdown\n\nSeparate vignettes into ‚ÄúGetting started‚Äù & ‚ÄúAdvanced‚Äù\nChange the theme to bslib5\n\nCreate a {golem.lint} package that will host:\n\nCheck for missing ns() with roxygen tag\nCurrent sanity checks\nStyler golem_style()\nurl checker ?\nprecommit hook for {precommit}\n\n{golemverse} √† la {tidyverse}\nIntegrate a storage mechanism in {gargoyle}. I‚Äôm thinking of a simple port of https://github.com/ColinFay/odds. https://github.com/ColinFay/gargoyle/issues/12\n{shinidraw} : excalidraw in {shiny}\nMore hooks for {ghooks} https://github.com/ThinkR-open/ghooks\nBring these packages to the golemverse:\n\nhttps://github.com/ColinFay/darkmode, ‚Äòdarkmode.js‚Äô for ‚ÄòShiny‚Äô\n\nQuestionning: should the following repos/packages be included to the golemverse?\n\nhttps://github.com/ColinFay/handydandy, Easy CSS Styling for Shiny\nhttps://github.com/ColinFay/feathericons, Feather Icons for Shiny\nhttps://github.com/ColinFay/nessy, A ‚ÄòNES‚Äô css for ‚ÄòShiny‚Äô\nhttps://github.com/ColinFay/resume, Bootstrap Resume Template for Shiny\nhttps://github.com/ColinFay/geoloc, Add geolocation inside your shiny app\nhttps://github.com/ColinFay/dockerstats, R Wrapper Around ‚Äòdocker stats‚Äô\nhttps://github.com/ColinFay/crrry, ‚Äòcrrri‚Äô recipes for ‚Äòshiny‚Äô\n\nWrite a blogpost about {gargoyle}"
  },
  {
    "objectID": "roadmap/index.html#mid-term",
    "href": "roadmap/index.html#mid-term",
    "title": "golemverse‚Äôs roadmap",
    "section": "Mid term",
    "text": "Mid term\n\nStable, production ready {brochure}\nDashboard template for {brochure}\nBlog post about :\n\n{elvis}\n\nNew fake data in {fakir}\nNew ipsum in {shinipsum}\nRelease on CRAN :\n\n{bank}\n{elvis}"
  },
  {
    "objectID": "roadmap/index.html#long-term",
    "href": "roadmap/index.html#long-term",
    "title": "golemverse‚Äôs roadmap",
    "section": "Long term",
    "text": "Long term\n\nFinish {w3css}\nMore features in {gemstones}\nPrepare a talk about ‚ÄúHidden gems of the golemverse‚Äù\nShort live streams presenting the packages (20 minutes + 10 min Q & A)"
  },
  {
    "objectID": "news/fakir-1.0.0-on-cran/index.html",
    "href": "news/fakir-1.0.0-on-cran/index.html",
    "title": "{fakir} 1.0.0 is now on CRAN",
    "section": "",
    "text": "I‚Äôm very happy to announce that {fakir} is now on CRAN.\n{fakir} stands for FAKe In R. It‚Äôs a package that generates fake datasets that can be used for prototyping {shiny} apps or for teaching."
  },
  {
    "objectID": "news/fakir-1.0.0-on-cran/index.html#installation",
    "href": "news/fakir-1.0.0-on-cran/index.html#installation",
    "title": "{fakir} 1.0.0 is now on CRAN",
    "section": "Installation",
    "text": "Installation\nYou can install the latest version from your favorite CRAN repository with:\ninstall.packages(\"fakir\")"
  },
  {
    "objectID": "news/fakir-1.0.0-on-cran/index.html#examples",
    "href": "news/fakir-1.0.0-on-cran/index.html#examples",
    "title": "{fakir} 1.0.0 is now on CRAN",
    "section": "Examples",
    "text": "Examples\n\nFake support tickets\n\nfakir::fake_ticket_client(vol = 10)\n\n# A tibble: 10 √ó 25\n   ref           num_client first    last  job     age region id_dpt departement\n   &lt;chr&gt;         &lt;chr&gt;      &lt;chr&gt;    &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;      \n 1 DOSS-AMQN-002 79         Jovan    O'Ke‚Ä¶ Gene‚Ä¶    22 Bourg‚Ä¶ 58     Ni√®vre     \n 2 DOSS-NCKJ-010 69         Miss     Lean‚Ä¶ Emer‚Ä¶    68 &lt;NA&gt;   36     Indre      \n 3 DOSS-GPBE-009 120        Odell    Stok‚Ä¶ Engi‚Ä¶    24 Limou‚Ä¶ 87     Haute-Vien‚Ä¶\n 4 DOSS-GRLN-001 31         Loren    Lars‚Ä¶ &lt;NA&gt;     NA Centre 36     Indre      \n 5 DOSS-LEPJ-004 59         Maybelle Maye‚Ä¶ Furt‚Ä¶    18 Champ‚Ä¶ 08     Ardennes   \n 6 DOSS-DUCL-005 118        Jamarion Ober‚Ä¶ Engi‚Ä¶    18 Alsace 67     Bas-Rhin   \n 7 DOSS-OCED-003 77         Lee      Scha‚Ä¶ Admi‚Ä¶    NA Auver‚Ä¶ 03     Allier     \n 8 DOSS-KXSJ-007 65         Demetric Auer  Cont‚Ä¶    21 Centre 45     Loiret     \n 9 DOSS-UITD-006 141        Wilfrid  Harv‚Ä¶ Educ‚Ä¶    53 Aquit‚Ä¶ 40     Landes     \n10 DOSS-SHKL-008 182        Addyson  Nien‚Ä¶ Earl‚Ä¶    65 Prove‚Ä¶ 84     Vaucluse   \n# ‚Ñπ 16 more variables: cb_provider &lt;chr&gt;, name &lt;chr&gt;, entry_date &lt;dttm&gt;,\n#   fidelity_points &lt;dbl&gt;, priority_encoded &lt;dbl&gt;, priority &lt;fct&gt;,\n#   timestamp &lt;date&gt;, year &lt;dbl&gt;, month &lt;dbl&gt;, day &lt;int&gt;, supported &lt;chr&gt;,\n#   supported_encoded &lt;int&gt;, type &lt;chr&gt;, type_encoded &lt;int&gt;, state &lt;fct&gt;,\n#   source_call &lt;fct&gt;\n\n\n\n\nFake dataset of connected wearables\n\nfakir::fake_products(10)\n\n# A tibble: 10 √ó 8\n   name                 brand color price body_location category sent_from    id\n   &lt;chr&gt;                &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;chr&gt;         &lt;chr&gt;    &lt;chr&gt;     &lt;int&gt;\n 1 Step and Distance P‚Ä¶ Lark‚Ä¶ Pink      3 Waist         Industr‚Ä¶ Taiwan        1\n 2 Biking Tracker U Pr‚Ä¶ Lark‚Ä¶ Oliv‚Ä¶     5 Waist         Pets an‚Ä¶ United S‚Ä¶     2\n 3 Wearable Transmitte‚Ä¶ Moen‚Ä¶ Beige     4 Feet          Lifesty‚Ä¶ Netherla‚Ä¶     3\n 4 Multifunction Track‚Ä¶ Weim‚Ä¶ Yell‚Ä¶     5 Head          Lifesty‚Ä¶ China         4\n 5 Action Camera Pro    Blan‚Ä¶ Mocc‚Ä¶    10 Brain         Lifesty‚Ä¶ Italy         5\n 6 Strapless Heart Rat‚Ä¶ Mann‚Ä¶ Deep‚Ä¶     4 Head          Medical  Finland       6\n 7 Action Camera RE Pr‚Ä¶ Mann‚Ä¶ Maro‚Ä¶     5 Feet          Enterta‚Ä¶ Finland       7\n 8 Microcontroller ES   Moen‚Ä¶ Pink      3 Neck          Fitness  Finland       8\n 9 Microcontroller OGB‚Ä¶ Moen‚Ä¶ Plum      5 Arms          Awesome  France        9\n10 Wearable AUSG with ‚Ä¶ Moen‚Ä¶ Dark‚Ä¶     9 Torso         Medical  Italy        10\n\n\n\n\nFake website visits\n\nfakir::fake_visits(\n  from = \"2017-01-01\",\n  to = \"2017-01-31\"\n)\n\n# A tibble: 31 √ó 8\n   timestamp   year month   day  home about  blog contact\n * &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;\n 1 2017-01-01  2017     1     1   369   220   404     210\n 2 2017-01-02  2017     1     2   159   250   414     490\n 3 2017-01-03  2017     1     3   436   170   498     456\n 4 2017-01-04  2017     1     4    NA   258   526     392\n 5 2017-01-05  2017     1     5   362    NA   407     291\n 6 2017-01-06  2017     1     6   245   145   576      90\n 7 2017-01-07  2017     1     7    NA    NA   484     167\n 8 2017-01-08  2017     1     8   461   103   441      NA\n 9 2017-01-09  2017     1     9   337   113   673     379\n10 2017-01-10  2017     1    10    NA   169   308     139\n# ‚Ñπ 21 more rows"
  },
  {
    "objectID": "news/fakir-1.0.0-on-cran/index.html#contribution-feedback",
    "href": "news/fakir-1.0.0-on-cran/index.html#contribution-feedback",
    "title": "{fakir} 1.0.0 is now on CRAN",
    "section": "Contribution & Feedback",
    "text": "Contribution & Feedback\nYou can contribute to {fakir} in various ways:\n\nFeedback\nIf you discover any bug or have any feedback on the dataset generators, feel free to open an issue on the repo.\n\n\nTranslate\nSome datasets are available in french and english:\n\nfakir::fake_visits(\n  from = \"2017-01-01\",\n  to = \"2017-01-31\",\n  local = \"fr_FR\"\n)\n\n# A tibble: 31 √ó 8\n   dates         an  mois  jour accueil a_propos  blog contact\n * &lt;date&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt;   &lt;int&gt;    &lt;int&gt; &lt;int&gt;   &lt;int&gt;\n 1 2017-01-01  2017     1     1     369      220   404     210\n 2 2017-01-02  2017     1     2     159      250   414     490\n 3 2017-01-03  2017     1     3     436      170   498     456\n 4 2017-01-04  2017     1     4      NA      258   526     392\n 5 2017-01-05  2017     1     5     362       NA   407     291\n 6 2017-01-06  2017     1     6     245      145   576      90\n 7 2017-01-07  2017     1     7      NA       NA   484     167\n 8 2017-01-08  2017     1     8     461      103   441      NA\n 9 2017-01-09  2017     1     9     337      113   673     379\n10 2017-01-10  2017     1    10      NA      169   308     139\n# ‚Ñπ 21 more rows\n\n\nAnd we will be very happy to bring new languages in the package.\n\n\nNew dataset\nFeel free to create new datasets generators.\n\nIf you want to contribute a new language or a new dataset, please open an issue first so that we can discuss and keep track of it!"
  },
  {
    "objectID": "news/golem-0.4.0-release-on-cran/index.html",
    "href": "news/golem-0.4.0-release-on-cran/index.html",
    "title": "{golem} 0.4.0 is now available",
    "section": "",
    "text": "The new version of {golem} is available!\nYou can download it from your favorite CRAN repository, or by running the following command:"
  },
  {
    "objectID": "news/golem-0.4.0-release-on-cran/index.html#whats-up-with-this-new-version",
    "href": "news/golem-0.4.0-release-on-cran/index.html#whats-up-with-this-new-version",
    "title": "{golem} 0.4.0 is now available",
    "section": "What‚Äôs up with this new version?",
    "text": "What‚Äôs up with this new version?\n\nLighter dependency tree\n\nAbout dependencies\nWhen we released the first version of {golem} on CRAN, we decided that all {golem}-based app should depend on {golem}. This was a conscious decision, and we made it because {golem} comes with a bunch of internal functions that are used at runtime.\nFor example bundle_resources() links all the external resources (CSS, JS, ‚Ä¶), is_running() detects that the current app is a {golem} app, with_golem_options() allows passing arguments to your run_app() functions (and to set a new cool option that I‚Äôll talk about below), and others. We were very aware that this choice came with a drawback: adding a dependency to every {golem}-based app.\nDependency management is a big topic in the software engineering world, and some projects tend to go for minimizing as much as possible the number of dependencies.\nThey are right (to a certain extent): adding dependencies means that you can be subject to some troubles, notably if one of the packages you‚Äôre relying on gets removed from the CRAN.\nEven in a contained world where you have your own CRAN-like repository, there is always the drawback of installation time: the more dependencies you have, the longer it takes to install the package, and by extension to compile a Docker image (for example). This is why we could have been tempted to imagine a different approach for {golem}: creating files inside your project that would contain everything you need. But I think that this approach can be way less safe and practical, for reasons I‚Äôll develop below.\n\nYou need dependencies for a {shiny} app\n\nFirst, whatever happens, you‚Äôll need to rely on {shiny}, as you are building a {shiny} app. And you‚Äôre likely to add a bunch of other packages along the way. So the ‚Äúvery small dependency tree‚Äù is a myth if you‚Äôre building a web app. {shiny} itself already has 31 dependencies.\n\n\nClick to show {shiny} dependency tree\n\n\npackageVersion(\"shiny\")\n\n[1] '1.7.4'\n\nshiny &lt;- pak::pkg_deps_tree(\"shiny\")\n\n‚Ñπ Loading metadata database\n‚Ñπ Loading metadata database\n\n\n‚úî Loading metadata database ... done\n‚úî Loading metadata database ... done\n\n\n\n\n\nshiny 1.7.4 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄhttpuv 1.6.9 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄRcpp 1.0.10 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄR6 2.5.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄpromises 1.2.0.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îÇ ‚îú‚îÄRcpp\n‚îÇ ‚îÇ ‚îú‚îÄlater 1.3.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄRcpp\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄrlang 1.1.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îî‚îÄmagrittr 2.0.3 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îî‚îÄlater\n‚îú‚îÄmime 0.12 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄjsonlite 1.8.4 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄxtable 1.8-4 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄfontawesome 0.5.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îî‚îÄhtmltools 0.5.5 ‚ú® ‚¨á (unknown size)\n‚îÇ   ‚îú‚îÄdigest 0.6.31 ‚ú® ‚¨á (unknown size)\n‚îÇ   ‚îú‚îÄbase64enc 0.1-3 ‚ú® ‚¨á (unknown size)\n‚îÇ   ‚îú‚îÄrlang\n‚îÇ   ‚îú‚îÄfastmap 1.1.1 ‚ú® ‚¨á (unknown size)\n‚îÇ   ‚îî‚îÄellipsis 0.3.2 ‚ú® ‚¨á (unknown size)\n‚îÇ     ‚îî‚îÄrlang\n‚îú‚îÄhtmltools\n‚îú‚îÄR6\n‚îú‚îÄsourcetools 0.1.7-1 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄlater\n‚îú‚îÄpromises\n‚îú‚îÄcrayon 1.5.2 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄrlang\n‚îú‚îÄfastmap\n‚îú‚îÄwithr 2.5.0 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄcommonmark 1.9.0 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄglue 1.6.2 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄbslib 0.4.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄhtmltools\n‚îÇ ‚îú‚îÄjsonlite\n‚îÇ ‚îú‚îÄsass 0.4.5 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄfs 1.6.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îú‚îÄhtmltools\n‚îÇ ‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îÇ ‚îî‚îÄrappdirs 0.3.3 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄjquerylib 0.1.4 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îî‚îÄhtmltools\n‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îú‚îÄcachem 1.0.7 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îî‚îÄfastmap\n‚îÇ ‚îú‚îÄmemoise 2.0.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îî‚îÄcachem\n‚îÇ ‚îú‚îÄbase64enc\n‚îÇ ‚îî‚îÄmime\n‚îú‚îÄcachem\n‚îú‚îÄellipsis\n‚îî‚îÄlifecycle 1.0.3 ‚ú® ‚¨á (unknown size)\n  ‚îú‚îÄcli 3.6.1 ‚ú® ‚¨á (unknown size)\n  ‚îú‚îÄglue\n  ‚îî‚îÄrlang\n\nKey:  ‚ú® new |  ‚¨á download\n\n\n\n\nUpdating your code base\n\nOn a larger scale, adding scripts to your app for functions that can come from a dependency is an issue in terms of security and maintenance. For example, let‚Äôs imagine that tomorrow, we discover a security breach in {shiny}, or in the way {golem} bundles the resources, or any other package.\nHow can we be sure that all your apps are updated once we‚Äôve built a patch? Yep, updating the packages. The solution of adding files would mean that you would have to go inside all your applications and update the files, with all the issues that come with this process (time-consuming, the risk of forgetting to update, typos‚Ä¶)\n\n\n\nDev dependencies vs runtime dependencies in {golem}\nThat being said, it‚Äôs true that previous versions of {golem} used to have too many hard dependencies, creating issues when sending the apps to production. In prod, many of {golem} dependencies were useless, and you don‚Äôt need them at runtime.\nThat‚Äôs because {golem} has two types of dependencies: dev dependencies (the packages you‚Äôre using when developing with {golem}) and runtime dependencies (the ones used when the application runs).\nIn version 0.3.3 of {golem}, we started removing dev dependencies. The first to go was {dockerfiler}, and now with 0.4.0 we have moved all the dev dependencies to the Suggests section of the DESCRIPTION. What that means is that if you‚Äôre using {golem} in a fresh R distribution, the dependency tree is way lighter, as you can see below. 65 dependencies for 0.3.5, and 37 for 0.4.0.\n\n\nClick to show {golem@v0.3.5} dependency tree\n\n\nv035 &lt;- pak::pkg_deps_tree(\"thinkr-open/golem@v0.3.5\")\n\nthinkr-open/golem@v0.3.5 0.3.5 ‚ú®üë∑üèΩüîß ‚¨á (unknown size)\n‚îú‚îÄattempt 0.3.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îî‚îÄrlang 1.1.0 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄcli 3.6.1 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄconfig 0.3.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îî‚îÄyaml 2.3.7 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄcrayon 1.5.2 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄdesc 1.4.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄcli\n‚îÇ ‚îú‚îÄR6 2.5.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îî‚îÄrprojroot 2.0.3 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄfs 1.6.1 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄhere 1.0.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îî‚îÄrprojroot\n‚îú‚îÄhtmltools 0.5.5 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄdigest 0.6.31 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄbase64enc 0.1-3 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îú‚îÄfastmap 1.1.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îî‚îÄellipsis 0.3.2 ‚ú® ‚¨á (unknown size)\n‚îÇ   ‚îî‚îÄrlang\n‚îú‚îÄpkgload 1.3.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄcli\n‚îÇ ‚îú‚îÄcrayon\n‚îÇ ‚îú‚îÄdesc\n‚îÇ ‚îú‚îÄfs\n‚îÇ ‚îú‚îÄglue 1.6.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îú‚îÄrprojroot\n‚îÇ ‚îî‚îÄwithr 2.5.0 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄroxygen2 7.2.3 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄbrew 1.0-8 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄcli\n‚îÇ ‚îú‚îÄcommonmark 1.9.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄdesc\n‚îÇ ‚îú‚îÄknitr 1.42 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄevaluate 0.20 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄhighr 0.10 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄxfun 0.37 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄyaml\n‚îÇ ‚îÇ ‚îî‚îÄxfun\n‚îÇ ‚îú‚îÄpkgload\n‚îÇ ‚îú‚îÄpurrr 1.0.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄcli\n‚îÇ ‚îÇ ‚îú‚îÄlifecycle 1.0.3 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄcli\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄglue\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄrlang\n‚îÇ ‚îÇ ‚îú‚îÄmagrittr 2.0.3 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îî‚îÄvctrs 0.6.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ   ‚îú‚îÄcli\n‚îÇ ‚îÇ   ‚îú‚îÄglue\n‚îÇ ‚îÇ   ‚îú‚îÄlifecycle\n‚îÇ ‚îÇ   ‚îî‚îÄrlang\n‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îú‚îÄstringi 1.7.12 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄstringr 1.5.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄcli\n‚îÇ ‚îÇ ‚îú‚îÄglue\n‚îÇ ‚îÇ ‚îú‚îÄlifecycle\n‚îÇ ‚îÇ ‚îú‚îÄmagrittr\n‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îú‚îÄstringi\n‚îÇ ‚îÇ ‚îî‚îÄvctrs\n‚îÇ ‚îú‚îÄwithr\n‚îÇ ‚îî‚îÄxml2 1.3.3 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄrstudioapi 0.14 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄshiny 1.7.4 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄhttpuv 1.6.9 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄRcpp 1.0.10 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îÇ ‚îú‚îÄpromises 1.2.0.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄRcpp\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄlater 1.3.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄRcpp\n‚îÇ ‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄmagrittr\n‚îÇ ‚îÇ ‚îî‚îÄlater\n‚îÇ ‚îú‚îÄmime 0.12 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄjsonlite 1.8.4 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄxtable 1.8-4 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄfontawesome 0.5.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îî‚îÄhtmltools\n‚îÇ ‚îú‚îÄhtmltools\n‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îú‚îÄsourcetools 0.1.7-1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄlater\n‚îÇ ‚îú‚îÄpromises\n‚îÇ ‚îú‚îÄcrayon\n‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îú‚îÄfastmap\n‚îÇ ‚îú‚îÄwithr\n‚îÇ ‚îú‚îÄcommonmark\n‚îÇ ‚îú‚îÄglue\n‚îÇ ‚îú‚îÄbslib 0.4.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄhtmltools\n‚îÇ ‚îÇ ‚îú‚îÄjsonlite\n‚îÇ ‚îÇ ‚îú‚îÄsass 0.4.5 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄfs\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄhtmltools\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄrappdirs 0.3.3 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄjquerylib 0.1.4 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄhtmltools\n‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îú‚îÄcachem 1.0.7 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄfastmap\n‚îÇ ‚îÇ ‚îú‚îÄmemoise 2.0.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄcachem\n‚îÇ ‚îÇ ‚îú‚îÄbase64enc\n‚îÇ ‚îÇ ‚îî‚îÄmime\n‚îÇ ‚îú‚îÄcachem\n‚îÇ ‚îú‚îÄellipsis\n‚îÇ ‚îî‚îÄlifecycle\n‚îú‚îÄusethis 2.1.6 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄcli\n‚îÇ ‚îú‚îÄclipr 0.8.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄcrayon\n‚îÇ ‚îú‚îÄcurl 5.0.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄdesc\n‚îÇ ‚îú‚îÄfs\n‚îÇ ‚îú‚îÄgert 1.9.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄaskpass 1.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄsys 3.4.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄcredentials 1.3.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄopenssl 2.0.6 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄaskpass\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄsys\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄcurl\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄjsonlite\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄaskpass\n‚îÇ ‚îÇ ‚îú‚îÄopenssl\n‚îÇ ‚îÇ ‚îú‚îÄrstudioapi\n‚îÇ ‚îÇ ‚îú‚îÄsys\n‚îÇ ‚îÇ ‚îî‚îÄzip 2.2.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄgh 1.4.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄcli\n‚îÇ ‚îÇ ‚îú‚îÄgitcreds 0.1.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄhttr2 0.2.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄcli\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄcurl\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄglue\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄmagrittr\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄopenssl\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄrappdirs\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄwithr\n‚îÇ ‚îÇ ‚îú‚îÄini 0.3.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄjsonlite\n‚îÇ ‚îÇ ‚îî‚îÄrlang\n‚îÇ ‚îú‚îÄglue\n‚îÇ ‚îú‚îÄjsonlite\n‚îÇ ‚îú‚îÄlifecycle\n‚îÇ ‚îú‚îÄpurrr\n‚îÇ ‚îú‚îÄrappdirs\n‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îú‚îÄrprojroot\n‚îÇ ‚îú‚îÄrstudioapi\n‚îÇ ‚îú‚îÄwhisker 0.4.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄwithr\n‚îÇ ‚îî‚îÄyaml\n‚îî‚îÄyaml\n\nKey:  ‚ú® new |  ‚¨á download | üë∑üèΩ build | üîß compile\n\nnrow(v035)\n\n[1] 65\n\n\n\n\n¬†\n\n\n\nClick to show {golem@v0.4.0} dependency tree\n\n\nv040 &lt;- pak::pkg_deps_tree(\"thinkr-open/golem@v0.4.0\")\n\nthinkr-open/golem@v0.4.0 0.4.0 ‚ú®üë∑üèΩüîß ‚¨á (unknown size)\n‚îú‚îÄattempt 0.3.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îî‚îÄrlang 1.1.0 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄconfig 0.3.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îî‚îÄyaml 2.3.7 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄhere 1.0.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îî‚îÄrprojroot 2.0.3 ‚ú® ‚¨á (unknown size)\n‚îú‚îÄhtmltools 0.5.5 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄdigest 0.6.31 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄbase64enc 0.1-3 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îú‚îÄfastmap 1.1.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îî‚îÄellipsis 0.3.2 ‚ú® ‚¨á (unknown size)\n‚îÇ   ‚îî‚îÄrlang\n‚îú‚îÄrlang\n‚îú‚îÄshiny 1.7.4 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄhttpuv 1.6.9 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄRcpp 1.0.10 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄR6 2.5.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄpromises 1.2.0.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄRcpp\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄlater 1.3.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄRcpp\n‚îÇ ‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄmagrittr 2.0.3 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îî‚îÄlater\n‚îÇ ‚îú‚îÄmime 0.12 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄjsonlite 1.8.4 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄxtable 1.8-4 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄfontawesome 0.5.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îî‚îÄhtmltools\n‚îÇ ‚îú‚îÄhtmltools\n‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îú‚îÄsourcetools 0.1.7-1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄlater\n‚îÇ ‚îú‚îÄpromises\n‚îÇ ‚îú‚îÄcrayon 1.5.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îú‚îÄfastmap\n‚îÇ ‚îú‚îÄwithr 2.5.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄcommonmark 1.9.0 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄglue 1.6.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îú‚îÄbslib 0.4.2 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄhtmltools\n‚îÇ ‚îÇ ‚îú‚îÄjsonlite\n‚îÇ ‚îÇ ‚îú‚îÄsass 0.4.5 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄfs 1.6.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄhtmltools\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄR6\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄrappdirs 0.3.3 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îú‚îÄjquerylib 0.1.4 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄhtmltools\n‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îú‚îÄcachem 1.0.7 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄfastmap\n‚îÇ ‚îÇ ‚îú‚îÄmemoise 2.0.1 ‚ú® ‚¨á (unknown size)\n‚îÇ ‚îÇ ‚îÇ ‚îú‚îÄrlang\n‚îÇ ‚îÇ ‚îÇ ‚îî‚îÄcachem\n‚îÇ ‚îÇ ‚îú‚îÄbase64enc\n‚îÇ ‚îÇ ‚îî‚îÄmime\n‚îÇ ‚îú‚îÄcachem\n‚îÇ ‚îú‚îÄellipsis\n‚îÇ ‚îî‚îÄlifecycle 1.0.3 ‚ú® ‚¨á (unknown size)\n‚îÇ   ‚îú‚îÄcli 3.6.1 ‚ú® ‚¨á (unknown size)\n‚îÇ   ‚îú‚îÄglue\n‚îÇ   ‚îî‚îÄrlang\n‚îî‚îÄyaml\n\nKey:  ‚ú® new |  ‚¨á download | üë∑üèΩ build | üîß compile\n\nnrow(v040)\n\n[1] 37\n\n\n\n\n¬†\n\nBut that‚Äôs still 35 packages, right?\nYes, but as I said before, every {shiny} app will depend on {shiny}. So how many packages does {golem} actually add to your dependency tree? In other words, how many packages does {golem} depend on that are not already a {shiny} dependency?\n\nsetdiff(\n  v040$package,\n  shiny$package\n)\n\n[1] \"golem\"     \"attempt\"   \"config\"    \"here\"      \"rprojroot\" \"yaml\"     \n\n\nThat‚Äôs 6 additional packages. {golem} & {attempt} being packages from ThinkR, and {config}, {here}, {rprojroot}, {yaml} packages from Posit open source team.\nSo yes, adding a dependency adds a small risk. But now it‚Äôs up to you to decide if trying to remove {golem} from your dependency tree is worth the time, compared to the time gained while developing and deploying üòÖ\n\nNote that soon, we‚Äôll work on removing {attempt} and {here} from the dependencies, but these three being\n\n\ngolem::install_dev_deps()\nTo be sure that you have all the dependencies needed when developing, {golem} now has a install_dev_deps() function. This function will check that you have everything needed to develop, and it will not be called at deployment time.\nYou‚Äôll now find this function at the top of your 01_start.R script.\n\n\n\nMaintenance mode\nOne new feature I‚Äôm particularly excited about is the ‚ÄúMaintenance mode‚Äù option.\nThis feature was born out of a specific need: in production, I needed to make an application go ‚Äúoffline‚Äù, as I knew the db was about to migrate. That implied doing some weird changes in the UI for a short period of time, before putting the app back.\nThat‚Äôs when the idea of a ‚ÄúMaintenance mode‚Äù was born, for the times when you need your application to be unavailable: database updates, API changes, etc. When this maintenance mode is turned on, your application will be paused and a specific page will be displayed to your users. And the cool thing is that it‚Äôs just an environment variable away: you don‚Äôt need to change anything in your app.\nThe maintenance mode will be turned on whenever the R process detects that the GOLEM_MAINTENANCE_ACTIVE environment variable is set to TRUE. It will look like this:\n\n\nBig Up to my dear colleague Arthur for developing this feature!\n\nTo visualize the maintenance page locally, you can run the following code:\nwithr::with_envvar(\n  c(\"GOLEM_MAINTENANCE_ACTIVE\" = TRUE),\n  {\n    golem::run_dev()\n  }\n)\nNote that {golem} comes with a default maintenance page, and you can replace it with your own page by passing either an html_document or a tagList to the with_golem_options function in run_app.R:\nrun_app &lt;- function(\n    onStart = NULL,\n    options = list(),\n    enableBookmarking = NULL,\n    uiPattern = \"/\",\n    ...\n) {\n  with_golem_options(\n    app = shinyApp(\n      ui = app_ui,\n      server = app_server,\n      onStart = onStart,\n      options = options,\n      enableBookmarking = enableBookmarking,\n      uiPattern = uiPattern\n    ),\n    golem_opts = list(...),\n    maintenance_page = shiny::htmlTemplate(\n      filename = app_sys(\n        \"custom_maintenance_page.html\"\n      )\n    )\n  )\n}\n\n\nOther changes\nPlease refer to the https://github.com/ThinkR-open/golem/releases page for a list of all the news!"
  },
  {
    "objectID": "news/golem-0.4.0-release-on-cran/index.html#thanks",
    "href": "news/golem-0.4.0-release-on-cran/index.html#thanks",
    "title": "{golem} 0.4.0 is now available",
    "section": "Thanks",
    "text": "Thanks\nWe want to thank all the people who have contributed to this release since the v0.3.1, either by opening PR, feature requests, or bug report.\n@agronomofiorentini, @ajmoralesa, @ALanguillaume, @Andryas, @ArthurData, @asadow, @asbates, @asiripanich, @avsolovey, @Camil88, @campbead, @Cervangirard, @ColinFay, @connorcarolan, @D3SL, @DivadNojnarg, @dmenne, @Dobrokhotov1989, @earnaud, @em-dataIntegrityEnthusiast, @erikvona, @ethantenison, @etiennebacher, @fBedecarrats, @gabrielburcea, @ggpinto, @gioneves, @guivivi, @harell, @hedjour, @henrique1008, @ilyaZar, @isaactpetersen, @ivokwee, @jamieRowen, @jl5000, @JMPivette, @Jodavid, @JohnStaples, @Jopgood, @JulianoAtto, @KittJonathan, @KoderKow, @kyleweise, @leeroyaus, @lijian007, @MargotBr, @mark-druffel, @mcsiple, @mjbroerman, @nathansquan, @ncls33, @ncullen93, @novica, @pachadotdev, @psolymos, @pythiantech, @rezasz969, @seanhardison1, @shahreyar-abeer, @statnmap, @stheil15, @svenb78, @Swechhya, @Teebusch, @teofiln, @VincentGuyader, @waiteb5, @whipson, @wurli, @yogat3ch, and @YonghuiDong."
  },
  {
    "objectID": "news/index.html",
    "href": "news/index.html",
    "title": "Posts",
    "section": "",
    "text": "{fakir} 1.0.0 is now on CRAN\n\n\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\ncolin\n\n\n\n\n\n\n\n\n\n\n\n\nMinimalist and Elegant {shiny} apps with {skeleton}\n\n\n\n\n\n\n\n\n\n\n\nApr 13, 2023\n\n\ncolin\n\n\n\n\n\n\n\n\n\n\n\n\n{golem} 0.4.0 is now available\n\n\n\n\n\n\n\n\n\n\n\nMar 15, 2023\n\n\ncolin\n\n\n\n\n\n\n\n\n\n\n\n\n{golem} 0.3.2 is now available\n\n\n\n\n\n\n\n\n\n\n\nMar 11, 2022\n\n\ncolin\n\n\n\n\n\n\n\n\n\n\n\n\nJoin HacktoberFest 2021 with {golem} (and more)!\n\n\n\n\n\n\n\n\n\n\n\nSep 30, 2021\n\n\ncolin\n\n\n\n\n\n\n\n\n\n\n\n\nAbout {golem} 0.3.1\n\n\n\n\n\n\n\n\n\n\n\nMay 28, 2021\n\n\ncolin\n\n\n\n\n\n\n\n\n\n\n\n\n{shinipsum} is now on CRAN\n\n\n\n\n\n\n\n\n\n\n\nMay 10, 2020\n\n\ncolin\n\n\n\n\n\n\n\n\n\n\n\n\n{golem} 0.1.0 has been released on CRAN\n\n\n\n\n\n\n\n\n\n\n\nAug 5, 2019\n\n\nSebastien Rochette\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "news/2020-05-10_shinipsum-cran-realease/index.html",
    "href": "news/2020-05-10_shinipsum-cran-realease/index.html",
    "title": "{shinipsum} is now on CRAN",
    "section": "",
    "text": "I‚Äôm very happy to announce that {shinipsum} is now on CRAN!\n{shinipsum} is a package that can help you build {shiny} prototypes faster by providing a series of functions that can generate random elements to populate your UI. If you are familiar with ‚Äúlorem ipsum‚Äù, the fake text generator that is used in software design as a placeholder for text, the idea is the same: generating placeholders for Shiny outputs.\n{shinipsum} can be installed from CRAN with:\n\ninstall.packages(\"shinipsum\")\n\nYou can install this package from GitHub with:\n\nremotes::install_github(\"Thinkr-open/shinipsum\")\n\nIn this package, a series of functions that generates random placeholders. For example, random_ggplot() generates random {ggplot2} elements:\n\nlibrary(shinipsum)\nlibrary(ggplot2)\n\n\nrandom_ggplot() +\n  labs(title = \"Random plot\")\n\n\n\n\n\n\n\n\n\nrandom_ggplot() +\n  labs(title = \"Random plot\")\n\n\n\n\n\n\n\n\nOf course, the idea is to combine this with a Shiny interface, for example random_ggplot() will be used with a renderPlot() and plotOutput(). And as we want to prototype but still be close to what your final application will look like, these functions take arguments that can shape the output: for example, random_ggplot() has a type parameter that can help you select a specific geom.\n\nlibrary(shiny)\nlibrary(shinipsum)\nlibrary(DT)\nui &lt;- fluidPage(\n  h2(\"A Random DT\"),\n  DTOutput(\"data_table\"),\n  h2(\"A Random Plot\"),\n  plotOutput(\"plot\"),\n  h2(\"A Random Text\"),\n  tableOutput(\"text\")\n)\n\nserver &lt;- function(input, output, session) {\n  output$data_table &lt;- DT::renderDT({\n    random_DT(5, 5)\n  })\n  output$plot &lt;- renderPlot({\n    random_ggplot(type = \"point\")\n  })\n  output$text &lt;- renderText({\n    random_text(nwords = 50)\n  })\n}\nshinyApp(ui, server)\n\nOther {shinipsum} functions include:\n\ntables:\n\n\nrandom_table(nrow = 3, ncol = 10)\n\n  Plant   Type  Treatment conc uptake Plant.1 Type.1 Treatment.1 conc.1\n1   Qn1 Quebec nonchilled   95   16.0     Qn1 Quebec  nonchilled     95\n2   Qn1 Quebec nonchilled  175   30.4     Qn1 Quebec  nonchilled    175\n3   Qn1 Quebec nonchilled  250   34.8     Qn1 Quebec  nonchilled    250\n  uptake.1\n1     16.0\n2     30.4\n3     34.8\n\n\n\nprint outputs:\n\n\nrandom_print(type = \"model\")\n\n\n    Pearson's product-moment correlation\n\ndata:  datasets::mtcars$mpg and datasets::mtcars$cyl\nt = -8.9197, df = 30, p-value = 6.113e-10\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.9257694 -0.7163171\nsample estimates:\n      cor \n-0.852162 \n\n\n‚Ä¶ and text, image, ggplotly, dygraph, and DT.\nLearn more about {shinipsum}:\n\n{shinipsum} website\nChapter 10 Building an ‚Äúipsum-app‚Äù - Engineering Production-Grade Shiny Apps"
  },
  {
    "objectID": "news/golem-0.1.0-release-on-cran/index.html",
    "href": "news/golem-0.1.0-release-on-cran/index.html",
    "title": "{golem} 0.1.0 has been released on CRAN",
    "section": "",
    "text": "golem (v0.1) A Framework for Building Robust Shiny Apps:\n\n{golem} on CRAN\n{golem} on GitHub\npkgdown and vignettes"
  },
  {
    "objectID": "stream/2022-02-10-twitch/index.html",
    "href": "stream/2022-02-10-twitch/index.html",
    "title": "Let‚Äôs build a new app!",
    "section": "",
    "text": "Let‚Äôs start building a new app with {golem} and {brochure}.\n\n\nüë®‚Äçüíª Colin Fay, @_ColinFay\n\n\nüîó https://www.twitch.tv/thinkr_fr\n\n\n‚è≥ 2022-02-10 21:00:00 Paris Time.\n\n\n\n\n See Event in Other Timezones \n\n\ndate &lt;- lubridate::ymd_hms(\"2022-02-10 21:00:00\", tz = \"Europe/Paris\")\n\nlubridate::with_tz(date, \"UTC\")\n\n[1] \"2022-02-10 20:00:00 UTC\"\n\nlubridate::with_tz(date, \"America/New_York\")\n\n[1] \"2022-02-10 15:00:00 EST\"\n\nlubridate::with_tz(date, \"America/Los_Angeles\")\n\n[1] \"2022-02-10 12:00:00 PST\"\n\nlubridate::with_tz(date, \"Australia/Sydney\")\n\n[1] \"2022-02-11 07:00:00 AEDT\""
  },
  {
    "objectID": "stream/index.html",
    "href": "stream/index.html",
    "title": "Streams",
    "section": "",
    "text": "Let‚Äôs build a new app!\n\n\n\n\n\n\n\n\n\n\n\nFeb 10, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nOverview of {hexmake}\n\n\n\n\n\n\n\n\n\n\n\nApr 2, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nSecond live stream\n\n\n\n\n\n\n\n\n\n\n\nJan 23, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nFirst live stream üéÇ\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2020\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R packages for building robust, production grade {shiny} apps.",
    "section": "",
    "text": "The golemverse is a collection of R packages for building {shiny} apps that need to be safely shipped to production.\n\n\n\n\n{bank}, Extra Cache\n{brochure}, Multipage ‚ÄòShiny‚Äô Apps\n{dockerfiler}, Easy Dockerfile Creation from R\n{elvis}, ‚ÄòShiny‚Äô renderers and observers made safer\n{fakir}, Generate Fake Datasets for Prototyping and Teaching\n{gargoyle}, An Event-Based Mechanism for ‚ÄòShiny‚Äô\n{gemstones}, Make Your ‚Äògolem‚Äô App Shine\n{golem}, Make Your ‚Äògolem‚Äô App Shine\n{ghooks}, ‚ÄòGolem‚Äô Hooks for Standard ‚ÄòShiny‚Äô Apps\n{minifyr}, Minify CSS, HTML and JavaScript Files\n{skeleton}, Skeleton CSS for Shiny\n{shinidraw}, ‚ÄòExcalidraw‚Äô in ‚ÄòShiny‚Äô\n{shinipsum}, Lorem-Ipsum Helper Function for ‚Äòshiny‚Äô Prototyping\n{w3css}, W3CSS for ‚Äòshiny‚Äô"
  },
  {
    "objectID": "index.html#read-the-book",
    "href": "index.html#read-the-book",
    "title": "R packages for building robust, production grade {shiny} apps.",
    "section": "Read the book üìö",
    "text": "Read the book üìö\n\n\nLearn more about building {shiny} apps for production with the Engineering Production-Grade Shiny Apps.\nThe online version of the book is free to read on https://engineering-shiny.org/.\nThis book is available in print, published in the R Series by Chapman and Hall/CRC. You can grab a copy on routledge.com."
  },
  {
    "objectID": "index.html#on-the-blog",
    "href": "index.html#on-the-blog",
    "title": "R packages for building robust, production grade {shiny} apps.",
    "section": "On the blog ‚úçÔ∏è",
    "text": "On the blog ‚úçÔ∏è\n\n\n\n\n\n\n\n\n\n\nPosts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n{fakir} 1.0.0 is now on CRAN\n\n\n\n\n\n\n\n\n\n\n\nApr 19, 2023\n\n\ncolin\n\n\n\n\n\n\n\n\n\n\n\n\nMinimalist and Elegant {shiny} apps with {skeleton}\n\n\n\n\n\n\n\n\n\n\n\nApr 13, 2023\n\n\ncolin\n\n\n\n\n\n\n\n\n\n\n\n\n{golem} 0.4.0 is now available\n\n\n\n\n\n\n\n\n\n\n\nMar 15, 2023\n\n\ncolin\n\n\n\n\n\n\n\n\n\n\n\n\n{golem} 0.3.2 is now available\n\n\n\n\n\n\n\n\n\n\n\nMar 11, 2022\n\n\ncolin\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#contact",
    "href": "index.html#contact",
    "title": "R packages for building robust, production grade {shiny} apps.",
    "section": "Contact üì≤",
    "text": "Contact üì≤\nContact us via the ThinkR website!"
  },
  {
    "objectID": "gameofgoose/index.html",
    "href": "gameofgoose/index.html",
    "title": "Golemverse Game of Goose",
    "section": "",
    "text": "Welcome to the Golemverse Game of Goose!\n\n\n\nStart with the idea üí°\nRole the dice üé≤\nMove your pawn ‚ôüÔ∏è\nIf you end on a bridge: move to the next bridge üåâ\nIf you end on a dice: play again üé≤\nIf you end on the skull: start again üíÄ\nIf you end on the well: skip one turn ‰∑Ø\nThe game is finished when you reach the end user üë©‚Äçüíª"
  },
  {
    "objectID": "gameofgoose/index.html#rules-of-the-game",
    "href": "gameofgoose/index.html#rules-of-the-game",
    "title": "Golemverse Game of Goose",
    "section": "",
    "text": "Start with the idea üí°\nRole the dice üé≤\nMove your pawn ‚ôüÔ∏è\nIf you end on a bridge: move to the next bridge üåâ\nIf you end on a dice: play again üé≤\nIf you end on the skull: start again üíÄ\nIf you end on the well: skip one turn ‰∑Ø\nThe game is finished when you reach the end user üë©‚Äçüíª"
  },
  {
    "objectID": "packages/gargoyle/index.html",
    "href": "packages/gargoyle/index.html",
    "title": "gargoyle",
    "section": "",
    "text": "{gargoyle} is an alternative way to manage reactivity in {shiny}.\n{gargoyle} is a package that provides wrappers around {shiny} to turn your app into and event-based application instead of a full reactive app. The framework is centered around a listen & trigger mechanism. It works with classical UI, and just needs tweaking the server side of your app.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/bank/index.html",
    "href": "packages/bank/index.html",
    "title": "bank",
    "section": "",
    "text": "Alternative caching backends for {memoise} & {shiny}.\nAlternative backend for caching {shiny}: MongoDB, Redis, Postgre.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/gemstones/index.html",
    "href": "packages/gemstones/index.html",
    "title": "gemstones",
    "section": "",
    "text": "Extend your {golem} application with external JS libraries.\nThe goal of {gemstones} is to allow you to add some JavaScript libraries to your {golem} based app. {gemstones} will automate the download and the linking of some JS libraries, but it‚Äôs important to understand that {gemstones} is not providing a full wrapper or widget for these libraries. You‚Äôll still have to code some elements to make it work.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/elvis/index.html",
    "href": "packages/elvis/index.html",
    "title": "elvis",
    "section": "",
    "text": "‚ÄòShiny‚Äô renderers and observers made safer.\nThe goal of {elvis} is to provide safer render* and observe* in {shiny} by providing a native tryCatch() mechanism.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/shinidraw/index.html",
    "href": "packages/shinidraw/index.html",
    "title": "shinidraw",
    "section": "",
    "text": "Excalidraw in {shiny}.\nBringing Excalidraw to your R console, with built-in project management.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/w3css/index.html",
    "href": "packages/w3css/index.html",
    "title": "w3css",
    "section": "",
    "text": "W3 CSS in {shiny}.\nAn implementation of W3 CSS https://www.w3schools.com/w3css/ for `{shiny}``.\n\n\n  \n  \n  \nStars:\nIssues:"
  },
  {
    "objectID": "packages/dockerfiler/index.html",
    "href": "packages/dockerfiler/index.html",
    "title": "dockerfiler",
    "section": "",
    "text": "Build dockerfile straight from R.\nThe goal of {dockerfiler} is to provide an easy way to create Dockerfiles from R. You can use {dockerfiler} to programatically create a Dockerfile.\n\n\n  \n  \n  \nStars:\nIssues:"
  }
]