---
title: "{golem} 0.5.0 is now available"
author: colin
date: '2024-08-26'
slug: golem-0.5.0-release-on-cran
redirect: /post/golem-0.5.0-release-on-cran/
---

```{r include = FALSE}
if (!requireNamespace("emo")){
  if (!requireNamespace("remotes")){
    install.packages("remotes")
  }
  remotes::install_github("hadley/emo")
}
if (!requireNamespace("shiny")){
  if (!requireNamespace("remotes")){
    install.packages("remotes")
  }
  remotes::install_cran("shiny")
}
```

![Image generated by ChatGPT](featured.png)


We are thrilled to announce the release of `{golem}` version 0.5.0! This update comes packed with new features, enhancements, and bug fixes that will streamline your Shiny app development process.

You can download the latest version from your favorite CRAN repository, or by running the following command in R:

```r
pak::pak(
  "thinkr-open/golem@v0.5.0"
)
```

## What's New in This Version?

The latest update of `{golem}` introduces several new functions and improvements, designed to enhance your experience when building and deploying Shiny applications.

### Major Highlights

#### `golem::welcome_page()`

The `golem::welcome_page()` function now displays a welcome page in the default scaffold app, offering a smoother onboarding experience for new users.


![](golem-welcome-page.png)

#### New Files Added

- `use_readme_rmd()`: This function adds a `{golem}`-specific `README.Rmd` to your project, making documentation easier and more consistent.

- `add_empty_file()`: Creates an empty file in the `www` directory, allowing for better management of static assets.

- `add_r6()`: Adds an empty R6 class template, facilitating object-oriented programming in your Shiny apps.

- `add_fct()` now includes a function skeleton to guide users in creating consistent functions across their projects.

### New Features and Enhancements

This release comes with a variety of new features and user-visible changes:

- The `is_golem()` function has been introduced to help determine if the current folder is a `{golem}`-based app. This function can be used especially useful for extending golem with project hooks.

- The `fill_desc()` function now automatically calls `set_options()` and uses a `person` vector for better project metadata management.

- The module skeleton has been updated to adhere to the tidyverse style.

### Deployment Improvements

- A `.rscignore` file is now created in the golem directory whenever connect-related files are generated, simplifying deployment to RStudio Connect.

- The `writeManifest()` function has been added to `deploy.R`, improving deployment workflows by ensuring all necessary dependencies are captured.

### Bug Fixes

Weâ€™ve addressed several issues in this release, including:

- `use_{internal,external}_XXX_file()` now works correctly with the default missing `name` argument.
- `run_dev()` now installs the necessary dependencies to source `dev/run_dev.R` if they are missing.
- `use_readme_rmd()` no longer pops up when `open=FALSE` is set, providing a smoother setup process.
- Docker commands now include the `-it` flag, allowing processes to be interrupted with `^C`.

### Internal Changes

This release also includes some internal improvements:

- We've added tests for previously untested files and functions, improving the overall code coverage of `{golem}`.

- The `guess_where_config()` function now locates user config YAML files based on changes made in `R/app_config.R`.

- The test suite has been refactored for faster execution and reduced verbosity.

This release marks a significant step forward for the `{golem}` package, offering new tools and enhancements to make your Shiny app development smoother and more efficient. We hope you enjoy the new features and improvements!

Happy coding! ðŸš€

Thanks to everyone who contributed to this new version!

